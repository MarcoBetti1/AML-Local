{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [allGroups, setAllGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [groupDetails, setGroupDetails] = useState(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [graphData, setGraphData] = useState(null);\n  const [elements, setElements] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [personalInfo, setPersonalInfo] = useState(null);\n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n    }\n  };\n  const onNodeClick = useCallback((event, node) => {\n    setNodes(nds => nds.map(n => ({\n      ...n,\n      data: {\n        ...n.data,\n        selected: n.id === node.id\n      }\n    })));\n    setSelectedNode(node);\n  }, [setNodes]);\n  const onNodeDoubleClick = useCallback(async (event, node) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nodes/${node.id}/personal-info`);\n      const data = await response.json();\n      setPersonalInfo(data);\n    } catch (error) {\n      console.error('Failed to fetch personal info:', error);\n    }\n  }, []);\n  const handleSearch = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/search?term=${searchTerm}`);\n      const data = await response.json();\n      setSearchResults(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Failed to search groups:', error);\n    }\n  };\n  // Custom node types\n  const nodeTypes = {\n    Customer: ({\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-node customer-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Name: \", data.FirstName, \" \", data.LastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", data.Email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this),\n    'Counter-Party': ({\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-node counter-party-node\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this),\n    Business: ({\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-node business-node\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)\n  };\n  const handleGroupSelect = useCallback(async groupId => {\n    setSelectedGroup(groupId);\n    try {\n      const [detailsResponse, graphResponse] = await Promise.all([fetch(`${API_BASE_URL}/groups/${groupId}`), fetch(`${API_BASE_URL}/groups/${groupId}/graph`)]);\n      const details = await detailsResponse.json();\n      const graph = await graphResponse.json();\n      setGroupDetails(details);\n      const newNodes = graph.nodes.map(node => ({\n        ...node,\n        type: 'customNode',\n        position: getNodePosition(node.type),\n        data: {\n          ...node.data,\n          selected: false\n        }\n      }));\n      const newEdges = graph.edges.map(edge => ({\n        ...edge,\n        type: 'default',\n        animated: true\n      }));\n      setNodes(newNodes);\n      setEdges(newEdges);\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n    }\n  }, [setNodes, setEdges]);\n  useEffect(() => {\n    if (graphData) {\n      console.log('Processing graph data:', graphData); // New log\n      const flowElements = [...graphData.nodes.map(node => ({\n        id: node.id,\n        type: node.type,\n        data: node.data,\n        position: {\n          x: Math.random() * 500,\n          y: Math.random() * 500\n        }\n      })), ...graphData.edges];\n      console.log('Created flow elements:', flowElements); // New log\n      setElements(flowElements);\n    }\n  }, [graphData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Entity Resolution System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            placeholder: \"Search groups...\",\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), allGroups.map(groupId => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleGroupSelect(groupId),\n            className: `group-item ${selectedGroup === groupId ? 'selected' : ''}`,\n            children: groupId\n          }, groupId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Search Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), searchResults.map(groupId => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleGroupSelect(groupId),\n            className: `search-result-item ${selectedGroup === groupId ? 'selected' : ''}`,\n            children: groupId\n          }, groupId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-panel\",\n        children: nodes.length > 0 ? /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          nodeTypes: nodeTypes,\n          onNodeClick: onNodeClick,\n          onNodeDoubleClick: onNodeDoubleClick,\n          fitView: true,\n          style: {\n            width: '100%',\n            height: '600px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Background, {\n            color: \"#aaa\",\n            gap: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a group to view its visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-panel\",\n        children: [selectedNode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedNode.data.type, \": \", selectedNode.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transactions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedNode.data.transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: transaction\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a node to view details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), personalInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Personal Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(personalInfo, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+K2ksL2OZ9+mP7jB60S68UwCgx0=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","allGroups","setAllGroups","selectedGroup","setSelectedGroup","groupDetails","setGroupDetails","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","graphData","setGraphData","elements","setElements","selectedNode","setSelectedNode","personalInfo","setPersonalInfo","fetchAllGroups","response","fetch","data","json","Array","isArray","error","console","onNodeClick","event","node","nds","map","n","selected","id","onNodeDoubleClick","handleSearch","e","preventDefault","nodeTypes","Customer","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","FirstName","LastName","Email","Counter-Party","Business","handleGroupSelect","groupId","detailsResponse","graphResponse","Promise","all","details","graph","newNodes","type","position","getNodePosition","newEdges","edge","animated","log","flowElements","x","Math","random","y","onSubmit","value","onChange","target","placeholder","onClick","length","fitView","style","width","height","color","gap","transactions","transaction","index","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\n\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [allGroups, setAllGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [groupDetails, setGroupDetails] = useState(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [graphData, setGraphData] = useState(null);\n  const [elements, setElements] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [personalInfo, setPersonalInfo] = useState(null);\n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n  \n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n    }\n  };\n  const onNodeClick = useCallback((event, node) => {\n    setNodes((nds) =>\n      nds.map((n) => ({\n        ...n,\n        data: {\n          ...n.data,\n          selected: n.id === node.id,\n        },\n      }))\n    );\n    setSelectedNode(node);\n  }, [setNodes]);\n\n  const onNodeDoubleClick = useCallback(async (event, node) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/nodes/${node.id}/personal-info`);\n      const data = await response.json();\n      setPersonalInfo(data);\n    } catch (error) {\n      console.error('Failed to fetch personal info:', error);\n    }\n  }, []);\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/search?term=${searchTerm}`);\n      const data = await response.json();\n      setSearchResults(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Failed to search groups:', error);\n    }\n  };\n  // Custom node types\nconst nodeTypes = {\n  Customer: ({ data }) => (\n    <div className=\"custom-node customer-node\">\n      <strong>{data.label}</strong>\n      <div>Name: {data.FirstName} {data.LastName}</div>\n      <div>Email: {data.Email}</div>\n    </div>\n  ),\n  'Counter-Party': ({ data }) => (\n    <div className=\"custom-node counter-party-node\">\n      <strong>{data.label}</strong>\n    </div>\n  ),\n  Business: ({ data }) => (\n    <div className=\"custom-node business-node\">\n      <strong>{data.label}</strong>\n    </div>\n  ),\n};\n\nconst handleGroupSelect = useCallback(async (groupId) => {\n  setSelectedGroup(groupId);\n  try {\n    const [detailsResponse, graphResponse] = await Promise.all([\n      fetch(`${API_BASE_URL}/groups/${groupId}`),\n      fetch(`${API_BASE_URL}/groups/${groupId}/graph`)\n    ]);\n    const details = await detailsResponse.json();\n    const graph = await graphResponse.json();\n    setGroupDetails(details);\n    \n    const newNodes = graph.nodes.map(node => ({\n      ...node,\n      type: 'customNode',\n      position: getNodePosition(node.type),\n      data: { ...node.data, selected: false }\n    }));\n    \n    const newEdges = graph.edges.map(edge => ({\n      ...edge,\n      type: 'default',\n      animated: true,\n    }));\n\n    setNodes(newNodes);\n    setEdges(newEdges);\n  } catch (error) {\n    console.error('Failed to fetch group data:', error);\n  }\n}, [setNodes, setEdges]);\n\n  useEffect(() => {\n    if (graphData) {\n      console.log('Processing graph data:', graphData); // New log\n      const flowElements = [\n        ...graphData.nodes.map(node => ({\n          id: node.id,\n          type: node.type,\n          data: node.data,\n          position: { x: Math.random() * 500, y: Math.random() * 500 },\n        })),\n        ...graphData.edges\n      ];\n      console.log('Created flow elements:', flowElements); // New log\n      setElements(flowElements);\n    }\n  }, [graphData]);\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Entity Resolution System</h1>\n      </header>\n      <div className=\"app-content\">\n        {/* Left sidebar */}\n        <div className=\"search-panel\">\n          <form onSubmit={handleSearch}>\n            <input\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              placeholder=\"Search groups...\"\n              className=\"search-input\"\n            />\n            <button type=\"submit\" className=\"search-button\">Search</button>\n          </form>\n          <div className=\"group-list\">\n            <h3>All Groups</h3>\n            {allGroups.map(groupId => (\n              <div \n                key={groupId} \n                onClick={() => handleGroupSelect(groupId)} \n                className={`group-item ${selectedGroup === groupId ? 'selected' : ''}`}\n              >\n                {groupId}\n              </div>\n            ))}\n          </div>\n          {searchResults.length > 0 && (\n            <div className=\"search-results\">\n              <h3>Search Results</h3>\n              {searchResults.map(groupId => (\n                <div \n                  key={groupId} \n                  onClick={() => handleGroupSelect(groupId)} \n                  className={`search-result-item ${selectedGroup === groupId ? 'selected' : ''}`}\n                >\n                  {groupId}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n          {/* Visualization panel */}\n          {/* Visualization panel */}\n          <div className=\"visualization-panel\">\n            {nodes.length > 0 ? (\n              <ReactFlow \n                nodes={nodes}\n                edges={edges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                nodeTypes={nodeTypes}\n                onNodeClick={onNodeClick}\n                onNodeDoubleClick={onNodeDoubleClick}\n                fitView\n                style={{ width: '100%', height: '600px' }}\n              >\n                <MiniMap />\n                <Controls />\n                <Background color=\"#aaa\" gap={16} />\n              </ReactFlow>\n            ) : (\n              <p>Select a group to view its visualization</p>\n            )}\n          </div>\n      <div className=\"details-panel\">\n        {selectedNode ? (\n          <div>\n            <h2>{selectedNode.data.type}: {selectedNode.id}</h2>\n            <h3>Transactions:</h3>\n            <ul>\n              {selectedNode.data.transactions.map((transaction, index) => (\n                <li key={index}>{transaction}</li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <h2>Select a node to view details</h2>\n        )}\n        {personalInfo && (\n          <div>\n            <h3>Personal Information:</h3>\n            <pre>{JSON.stringify(personalInfo, null, 2)}</pre>\n          </div>\n        )}\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}