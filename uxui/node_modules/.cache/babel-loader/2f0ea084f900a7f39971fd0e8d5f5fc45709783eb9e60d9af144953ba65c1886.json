{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/VisualizationPanel.js\";\nimport React from 'react';\nimport ReactFlow, { MiniMap, Controls, Background } from 'react-flow-renderer';\nimport nodeTypes from './nodeTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VisualizationPanel({\n  nodes,\n  edges,\n  onNodesChange,\n  onEdgesChange,\n  onNodeClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualization-panel\",\n    children: nodes.length > 0 ? /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      onNodeClick: onNodeClick,\n      fitView: true,\n      style: {\n        width: '100%',\n        height: '600px'\n      },\n      defaultViewport: {\n        x: 0,\n        y: 0,\n        zoom: 1.5\n      } // Adjust zoom as needed\n      ,\n      nodesDraggable: false // Optional: prevent node dragging\n      ,\n      elementsSelectable: false // Optional: prevent element selection\n      ,\n      minZoom: 0.5 // Optional: set minimum zoom level\n      ,\n      maxZoom: 2 // Optional: set maximum zoom level\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a group to view its visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = VisualizationPanel;\nexport default VisualizationPanel;\nvar _c;\n$RefreshReg$(_c, \"VisualizationPanel\");","map":{"version":3,"names":["React","ReactFlow","MiniMap","Controls","Background","nodeTypes","jsxDEV","_jsxDEV","VisualizationPanel","nodes","edges","onNodesChange","onEdgesChange","onNodeClick","className","children","length","fitView","style","width","height","defaultViewport","x","y","zoom","nodesDraggable","elementsSelectable","minZoom","maxZoom","fileName","_jsxFileName","lineNumber","columnNumber","color","gap","_c","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/VisualizationPanel.js"],"sourcesContent":["import React from 'react';\nimport ReactFlow, { \n  MiniMap, \n  Controls, \n  Background\n} from 'react-flow-renderer';\nimport nodeTypes from './nodeTypes';\n\nfunction VisualizationPanel({ nodes, edges, onNodesChange, onEdgesChange, onNodeClick }) {\n  return (\n    <div className=\"visualization-panel\">\n      {nodes.length > 0 ? (\n        <ReactFlow \n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          nodeTypes={nodeTypes}\n          onNodeClick={onNodeClick}\n          fitView\n          style={{ width: '100%', height: '600px' }}\n          defaultViewport={{ x: 0, y: 0, zoom: 1.5 }} // Adjust zoom as needed\n          nodesDraggable={false} // Optional: prevent node dragging\n          elementsSelectable={false} // Optional: prevent element selection\n          minZoom={0.5} // Optional: set minimum zoom level\n          maxZoom={2} // Optional: set maximum zoom level\n        >\n          <Controls />\n          <Background color=\"#aaa\" gap={16} />\n        </ReactFlow>\n      ) : (\n        <p>Select a group to view its visualization</p>\n      )}\n    </div>\n  );\n}\n\nexport default VisualizationPanel;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,IACdC,OAAO,EACPC,QAAQ,EACRC,UAAU,QACL,qBAAqB;AAC5B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,kBAAkBA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,aAAa;EAAEC,aAAa;EAAEC;AAAY,CAAC,EAAE;EACvF,oBACEN,OAAA;IAAKO,SAAS,EAAC,qBAAqB;IAAAC,QAAA,EACjCN,KAAK,CAACO,MAAM,GAAG,CAAC,gBACfT,OAAA,CAACN,SAAS;MACRQ,KAAK,EAAEA,KAAM;MACbC,KAAK,EAAEA,KAAM;MACbC,aAAa,EAAEA,aAAc;MAC7BC,aAAa,EAAEA,aAAc;MAC7BP,SAAS,EAAEA,SAAU;MACrBQ,WAAW,EAAEA,WAAY;MACzBI,OAAO;MACPC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAC1CC,eAAe,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAI,CAAE,CAAC;MAAA;MAC5CC,cAAc,EAAE,KAAM,CAAC;MAAA;MACvBC,kBAAkB,EAAE,KAAM,CAAC;MAAA;MAC3BC,OAAO,EAAE,GAAI,CAAC;MAAA;MACdC,OAAO,EAAE,CAAE,CAAC;MAAA;MAAAb,QAAA,gBAEZR,OAAA,CAACJ,QAAQ;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZzB,OAAA,CAACH,UAAU;QAAC6B,KAAK,EAAC,MAAM;QAACC,GAAG,EAAE;MAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,gBAEZzB,OAAA;MAAAQ,QAAA,EAAG;IAAwC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC/C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACG,EAAA,GA3BQ3B,kBAAkB;AA6B3B,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}