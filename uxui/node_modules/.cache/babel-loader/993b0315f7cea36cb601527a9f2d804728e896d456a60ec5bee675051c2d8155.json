{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, applyNodeChanges, applyEdgeChanges } from 'react-flow-renderer';\nimport SearchPanel from './SearchPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { MarkerType } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\nconst UserIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n_c = UserIcon;\nconst MenuIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n_c2 = MenuIcon;\nfunction App() {\n  _s();\n  const [allGroups, setAllGroups] = useState([]);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [displayGroups, setDisplayGroups] = useState([]);\n  const [timeframe, setTimeframe] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [appliedTimeframe, setAppliedTimeframe] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const handleNodeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      nodes: applyNodeChanges(changes, group.nodes)\n    } : group));\n  }, []);\n  const handleSearch = useCallback(async searchTerm => {\n    if (!searchTerm) {\n      setDisplayGroups(allGroups); // allGroups already contains the correct format\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/search?term=${encodeURIComponent(searchTerm)}`);\n      if (!response.ok) throw new Error('Search failed');\n      const data = await response.json();\n      setDisplayGroups(data);\n    } catch (error) {\n      console.error('Error performing search:', error);\n      setError('Failed to perform search. Please try again later.');\n    }\n  }, [allGroups]);\n  const handleEdgeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      edges: applyEdgeChanges(changes, group.edges)\n    } : group));\n  }, []);\n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n  useEffect(() => {\n    if (allGroups.length > 0) {\n      setDisplayGroups(allGroups.map(group => ({\n        group,\n        displayValue: group\n      })));\n    }\n  }, [allGroups]);\n  // Modify the fetchAllGroups function:\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(data);\n      setDisplayGroups(data); // The data is already in the correct format\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n      setError('Failed to fetch groups. Please try again later.');\n    }\n  };\n  const handleGroupSelect = useCallback(async groupId => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const queryParams = new URLSearchParams({\n        startDate: timeframe.startDate,\n        endDate: timeframe.endDate\n      }).toString();\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}/data?${queryParams}`);\n      const data = await response.json();\n      if (data.graphData && Array.isArray(data.graphData.nodes) && Array.isArray(data.graphData.edges)) {\n        const newNodes = data.graphData.nodes.map(node => ({\n          ...node,\n          position: getInitialNodePosition(node.type)\n        }));\n        const newEdges = data.graphData.edges.map(edge => ({\n          ...edge,\n          type: 'smoothstep',\n          animated: true,\n          style: {\n            stroke: '#888'\n          }\n        }));\n        setOpenGroups(prev => {\n          var _allGroups$find;\n          const groupIndex = prev.findIndex(group => group.id === groupId);\n          const displayName = ((_allGroups$find = allGroups.find(g => g.group === groupId)) === null || _allGroups$find === void 0 ? void 0 : _allGroups$find.displayValue) || groupId;\n          if (groupIndex !== -1) {\n            // Update existing group\n            const updatedGroups = [...prev];\n            updatedGroups[groupIndex] = {\n              id: groupId,\n              data,\n              nodes: newNodes,\n              edges: newEdges,\n              displayName\n            };\n            return updatedGroups;\n          } else {\n            // Add new group\n            return [...prev, {\n              id: groupId,\n              data,\n              nodes: newNodes,\n              edges: newEdges,\n              displayName\n            }];\n          }\n        });\n        setActiveGroupId(groupId);\n      } else {\n        console.error('Unexpected data structure:', data);\n        setError('Received unexpected data structure from the server.');\n      }\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n      setError('Failed to fetch group data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeframe, allGroups]);\n  const handleCloseGroup = useCallback(groupId => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      var _openGroups$;\n      setActiveGroupId(((_openGroups$ = openGroups[0]) === null || _openGroups$ === void 0 ? void 0 : _openGroups$.id) || null);\n    }\n  }, [activeGroupId, openGroups]);\n  const getInitialNodePosition = type => {\n    const centerX = 250;\n    const centerY = 250;\n    const radius = 200;\n    const angle = Math.random() * 2 * Math.PI;\n    switch (type) {\n      case 'Customer':\n        return {\n          x: centerX + radius * Math.cos(angle),\n          y: centerY + radius * Math.sin(angle)\n        };\n      case 'Counter-Party':\n        return {\n          x: centerX + radius * 0.9 * Math.cos(angle + Math.PI),\n          y: centerY + radius * 0.6 * Math.sin(angle + Math.PI)\n        };\n      case 'Business':\n        return {\n          x: centerX + radius * 0.6 * Math.cos(angle + Math.PI / 2),\n          y: centerY + radius * 0.9 * Math.sin(angle + Math.PI / 2)\n        };\n      case 'Transfer':\n      case 'BillPay':\n        return {\n          x: centerX + radius * 0.4 * Math.cos(angle),\n          y: centerY + radius * 0.3 * Math.sin(angle)\n        };\n      default:\n        return {\n          x: centerX + radius * Math.random(),\n          y: centerY + radius * Math.random()\n        };\n    }\n  };\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  const applyTimeframeFilter = async () => {\n    if (activeGroupId) {\n      await handleGroupSelect(activeGroupId);\n    }\n  };\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-icon-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/GTIcon.png\",\n          alt: \"Entity Resolution\",\n          className: \"app-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-icons\",\n        children: [/*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabNavigation, {\n      openGroups: openGroups,\n      activeGroupId: activeGroupId,\n      onTabChange: setActiveGroupId,\n      onCloseTab: handleCloseGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        displayGroups: displayGroups,\n        onGroupSelect: handleGroupSelect,\n        selectedGroup: activeGroupId,\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this) : activeGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-group-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeframe-selector-container\",\n          children: /*#__PURE__*/_jsxDEV(TimeframeSelector, {\n            startDate: timeframe.startDate,\n            endDate: timeframe.endDate,\n            onStartDateChange: date => setTimeframe(prev => ({\n              ...prev,\n              startDate: date\n            })),\n            onEndDateChange: date => setTimeframe(prev => ({\n              ...prev,\n              endDate: date\n            })),\n            onApplyFilter: applyTimeframeFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: /*#__PURE__*/_jsxDEV(VisualizationPanel, {\n            nodes: activeGroup.nodes,\n            edges: activeGroup.edges,\n            onNodesChange: changes => handleNodeChanges(changes, activeGroupId),\n            onEdgesChange: changes => handleEdgeChanges(changes, activeGroupId),\n            onNodeDoubleClick: handleNodeDoubleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entity-details-container\",\n          children: /*#__PURE__*/_jsxDEV(EntityDetails, {\n            groupData: activeGroup.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-group-selected\",\n        children: \"Select a group to view details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(NodeInfoPopup, {\n      node: selectedNode,\n      onClose: () => setSelectedNode(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dMHOCSZHNQs2Bd6+Wh2+UctW3ZY=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserIcon\");\n$RefreshReg$(_c2, \"MenuIcon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","useNodesState","useEdgesState","applyNodeChanges","applyEdgeChanges","SearchPanel","VisualizationPanel","EntityDetails","NodeInfoPopup","ToolBar","TabNavigation","TimeframeSelector","MarkerType","jsxDEV","_jsxDEV","API_BASE_URL","UserIcon","className","viewBox","width","height","fill","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuIcon","_c2","App","_s","allGroups","setAllGroups","openGroups","setOpenGroups","activeGroupId","setActiveGroupId","isLoading","setIsLoading","error","setError","selectedNode","setSelectedNode","displayGroups","setDisplayGroups","timeframe","setTimeframe","startDate","endDate","appliedTimeframe","setAppliedTimeframe","handleNodeChanges","changes","groupId","prev","map","group","id","nodes","handleSearch","searchTerm","response","fetch","encodeURIComponent","ok","Error","data","json","console","handleEdgeChanges","edges","fetchAllGroups","length","displayValue","handleGroupSelect","queryParams","URLSearchParams","toString","graphData","Array","isArray","newNodes","node","position","getInitialNodePosition","type","newEdges","edge","animated","style","stroke","_allGroups$find","groupIndex","findIndex","displayName","find","g","updatedGroups","handleCloseGroup","filter","_openGroups$","centerX","centerY","radius","angle","Math","random","PI","x","cos","y","sin","handleNodeDoubleClick","event","applyTimeframeFilter","activeGroup","src","alt","onTabChange","onCloseTab","onGroupSelect","selectedGroup","onSearch","onStartDateChange","date","onEndDateChange","onApplyFilter","onNodesChange","onEdgesChange","onNodeDoubleClick","groupData","onClose","_c3","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { \n  useNodesState, \n  useEdgesState, \n  applyNodeChanges, \n  applyEdgeChanges \n} from 'react-flow-renderer';\nimport SearchPanel from './SearchPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { MarkerType } from 'react-flow-renderer';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\nconst UserIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </svg>\n);\n\nfunction App() {\n  const [allGroups, setAllGroups] = useState([]);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [displayGroups, setDisplayGroups] = useState([]);\n  const [timeframe, setTimeframe] = useState({ startDate: '', endDate: '' });\n  const [appliedTimeframe, setAppliedTimeframe] = useState({ startDate: '', endDate: '' });\n\n\n  const handleNodeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId \n        ? { ...group, nodes: applyNodeChanges(changes, group.nodes) }\n        : group\n    ));\n  }, []);\n\n  const handleSearch = useCallback(async (searchTerm) => {\n  if (!searchTerm) {\n    setDisplayGroups(allGroups); // allGroups already contains the correct format\n    return;\n  }\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/search?term=${encodeURIComponent(searchTerm)}`);\n    if (!response.ok) throw new Error('Search failed');\n    const data = await response.json();\n    setDisplayGroups(data);\n  } catch (error) {\n    console.error('Error performing search:', error);\n    setError('Failed to perform search. Please try again later.');\n  }\n}, [allGroups]);\n\n\n  const handleEdgeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId \n        ? { ...group, edges: applyEdgeChanges(changes, group.edges) }\n        : group\n    ));\n  }, []);\n  \n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n  useEffect(() => {\n    if (allGroups.length > 0) {\n      setDisplayGroups(allGroups.map(group => ({ group, displayValue: group })));\n    }\n  }, [allGroups]);\n  // Modify the fetchAllGroups function:\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(data);\n      setDisplayGroups(data); // The data is already in the correct format\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n      setError('Failed to fetch groups. Please try again later.');\n    }\n  };\n\n  const handleGroupSelect = useCallback(async (groupId) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const queryParams = new URLSearchParams({\n        startDate: timeframe.startDate,\n        endDate: timeframe.endDate\n      }).toString();\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}/data?${queryParams}`);\n      const data = await response.json();\n      \n      if (data.graphData && Array.isArray(data.graphData.nodes) && Array.isArray(data.graphData.edges)) {\n        const newNodes = data.graphData.nodes.map(node => ({\n          ...node,\n          position: getInitialNodePosition(node.type),\n        }));\n\n        const newEdges = data.graphData.edges.map(edge => ({\n          ...edge,\n          type: 'smoothstep',\n          animated: true,\n          style: { stroke: '#888' },\n        }));\n\n        setOpenGroups(prev => {\n          const groupIndex = prev.findIndex(group => group.id === groupId);\n          const displayName = allGroups.find(g => g.group === groupId)?.displayValue || groupId;\n          if (groupIndex !== -1) {\n            // Update existing group\n            const updatedGroups = [...prev];\n            updatedGroups[groupIndex] = { id: groupId, data, nodes: newNodes, edges: newEdges, displayName };\n            return updatedGroups;\n          } else {\n            // Add new group\n            return [...prev, { id: groupId, data, nodes: newNodes, edges: newEdges, displayName }];\n          }\n        });\n        setActiveGroupId(groupId);\n      } else {\n        console.error('Unexpected data structure:', data);\n        setError('Received unexpected data structure from the server.');\n      }\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n      setError('Failed to fetch group data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeframe, allGroups]);\n\n  const handleCloseGroup = useCallback((groupId) => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      setActiveGroupId(openGroups[0]?.id || null);\n    }\n  }, [activeGroupId, openGroups]);\n\n  const getInitialNodePosition = (type) => {\n    const centerX = 250;\n    const centerY = 250;\n    const radius = 200;\n    const angle = Math.random() * 2 * Math.PI;\n    \n    switch(type) {\n      case 'Customer':\n        return { x: centerX + radius * Math.cos(angle), y: centerY + radius * Math.sin(angle) };\n      case 'Counter-Party':\n        return { x: centerX + radius * 0.9 * Math.cos(angle + Math.PI), y: centerY + radius * 0.6 * Math.sin(angle + Math.PI) };\n      case 'Business':\n        return { x: centerX + radius * 0.6 * Math.cos(angle + Math.PI/2), y: centerY + radius * 0.9 * Math.sin(angle + Math.PI/2) };\n      case 'Transfer':\n      case 'BillPay':\n        return { x: centerX + radius * 0.4 * Math.cos(angle), y: centerY + radius * 0.3 * Math.sin(angle) };\n      default:\n        return { x: centerX + radius * Math.random(), y: centerY + radius * Math.random() };\n    }\n  };\n\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  const applyTimeframeFilter = async () => {\n\n    if (activeGroupId) {\n      await handleGroupSelect(activeGroupId);\n    }\n  };\n  \n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n  \n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"app-icon-container\">\n          <img src=\"icons/GTIcon.png\" alt=\"Entity Resolution\" className=\"app-icon\" />\n        </div>\n        <div className=\"header-icons\">\n          <UserIcon />\n          <MenuIcon />\n        </div>\n      </header>\n      <TabNavigation \n        openGroups={openGroups}\n        activeGroupId={activeGroupId}\n        onTabChange={setActiveGroupId}\n        onCloseTab={handleCloseGroup}\n      />\n      <div className=\"app-content\">\n      <SearchPanel \n        displayGroups={displayGroups}\n        onGroupSelect={handleGroupSelect} \n        selectedGroup={activeGroupId}\n        onSearch={handleSearch}\n      />\n        {isLoading ? (\n          <div className=\"loading-indicator\">Loading...</div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : activeGroup ? (\n          <div className=\"active-group-content\">\n            <div className=\"timeframe-selector-container\">\n              <TimeframeSelector\n                startDate={timeframe.startDate}\n                endDate={timeframe.endDate}\n                onStartDateChange={(date) => setTimeframe(prev => ({ ...prev, startDate: date }))}\n                onEndDateChange={(date) => setTimeframe(prev => ({ ...prev, endDate: date }))}\n                onApplyFilter={applyTimeframeFilter}\n              />\n            </div>\n            <div className=\"visualization-container\">\n              <VisualizationPanel \n                nodes={activeGroup.nodes}\n                edges={activeGroup.edges}\n                onNodesChange={(changes) => handleNodeChanges(changes, activeGroupId)}\n                onEdgesChange={(changes) => handleEdgeChanges(changes, activeGroupId)}\n                onNodeDoubleClick={handleNodeDoubleClick}\n              />\n            </div>\n            <ToolBar />\n            <div className=\"entity-details-container\">\n              <EntityDetails \n                groupData={activeGroup.data} \n                />\n            </div>\n          </div>\n        ) : (\n          <div className=\"no-group-selected\">Select a group to view details</div>\n        )}\n      </div>\n      {selectedNode && (\n        <NodeInfoPopup node={selectedNode} onClose={() => setSelectedNode(null)} />\n      )}\n    </div>\n  );\n  \n  \n  \n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}