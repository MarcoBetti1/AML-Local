{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useGroups, useGroupData, useTimeframe } from './hooks';\nimport SearchPanel from './SearchPanel';\nimport GraphVisualization from './GraphVisualization';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\nconst UserIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = UserIcon;\nconst MenuIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n_c2 = MenuIcon;\nfunction App() {\n  _s();\n  const fetchGroupInfo = useCallback(async groupId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/group-info/${groupId}`);\n      if (!response.ok) throw new Error('Failed to fetch group info');\n      const data = await response.json();\n      return data.displayValue;\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n      return groupId; // Fallback to using the group ID if fetch fails\n    }\n  }, []);\n  const {\n    displayGroups,\n    handleSearch\n  } = useGroups();\n  const {\n    groupData,\n    isLoading,\n    error,\n    fetchGroupData\n  } = useGroupData();\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [nextTabId, setNextTabId] = useState(1);\n  const [groupInfo, setGroupInfo] = useState({});\n\n  // const fetchGroupInfo = useCallback(async (groupId) => {\n  //   try {\n  //     const response = await fetch(`${API_BASE_URL}/group-info/${groupId}`);\n  //     if (!response.ok) throw new Error('Failed to fetch group info');\n  //     const data = await response.json();\n  //     setGroupInfo(prevInfo => ({\n  //       ...prevInfo,\n  //       [groupId]: data.displayValue\n  //     }));\n  //     return data.displayValue;\n  //   } catch (error) {\n  //     console.error('Error fetching group info:', error);\n  //     return groupId; // Fallback to using the group ID if fetch fails\n  //   }\n\n  // }, []);\n\n  const handleLinkedGroupOpen = useCallback(async linkId => {\n    // Check if the linked group is already open\n    const existingGroupIndex = openGroups.findIndex(group => group.id === linkId);\n    if (existingGroupIndex !== -1) {\n      handleTabChange(linkId);\n      return;\n    }\n\n    // Fetch the linked group data\n    await fetchGroupData(linkId);\n    const groupDisplayName = await fetchGroupInfo(linkId);\n\n    // Add the linked group as a new tab\n    setOpenGroups(prev => [...prev, {\n      id: linkId,\n      displayName: groupDisplayName,\n      timeframe: {\n        startDate: '',\n        endDate: ''\n      }\n    }]);\n    setActiveGroupId(linkId);\n  }, [openGroups, fetchGroupData, fetchGroupInfo]);\n  const handleGroupSelect = useCallback(async groupId => {\n    const existingGroupIndex = openGroups.findIndex(group => group.id === groupId);\n    if (existingGroupIndex !== -1) {\n      handleTabChange(groupId);\n      return;\n    }\n    try {\n      const [fetchedGroupData, groupDisplayName] = await Promise.all([fetchGroupData(groupId), fetchGroupInfo(groupId)]);\n      setOpenGroups(prev => {\n        const newGroup = {\n          id: groupId,\n          displayName: groupDisplayName,\n          data: fetchedGroupData,\n          timeframe: {\n            startDate: '',\n            endDate: ''\n          }\n        };\n        if (prev.length === 0 || !prev[prev.length - 1].data) {\n          return [...prev.slice(0, -1), newGroup];\n        }\n        return [...prev, newGroup];\n      });\n      setActiveGroupId(groupId);\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n    }\n  }, [openGroups, fetchGroupData, fetchGroupInfo]);\n  const handleTimeframeApply = useCallback((startDate, endDate) => {\n    if (activeGroupId) {\n      fetchGroupData(activeGroupId, startDate, endDate).then(fetchedGroupData => {\n        setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n          ...group,\n          data: fetchedGroupData,\n          timeframe: {\n            startDate,\n            endDate\n          }\n        } : group));\n      });\n    }\n  }, [activeGroupId, fetchGroupData]);\n  const handleResetTimeframe = useCallback(() => {\n    if (activeGroupId) {\n      fetchGroupData(activeGroupId, '', '').then(fetchedGroupData => {\n        setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n          ...group,\n          data: fetchedGroupData,\n          timeframe: {\n            startDate: '',\n            endDate: ''\n          }\n        } : group));\n      });\n    }\n  }, [activeGroupId, fetchGroupData]);\n  const handleAddNewTab = useCallback(() => {\n    const newTabId = `New Tab ${nextTabId}`;\n    setOpenGroups(prev => [...prev, {\n      id: newTabId,\n      displayName: newTabId,\n      data: null,\n      timeframe: {\n        startDate: '',\n        endDate: ''\n      }\n    }]);\n    setActiveGroupId(newTabId);\n    setNextTabId(prev => prev + 1);\n  }, [nextTabId]);\n  const handleCloseGroup = useCallback(groupId => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      var _openGroups$;\n      setActiveGroupId(((_openGroups$ = openGroups[0]) === null || _openGroups$ === void 0 ? void 0 : _openGroups$.id) || null);\n    }\n  }, [activeGroupId, openGroups]);\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  const handleTabChange = useCallback(async tabId => {\n    const group = openGroups.find(g => g.id === tabId);\n    if (group) {\n      // Fetch the latest data for the group, using its stored timeframe\n      const updatedGroupData = await fetchGroupData(tabId, group.timeframe.startDate, group.timeframe.endDate);\n      setOpenGroups(prev => prev.map(g => g.id === tabId ? {\n        ...g,\n        data: updatedGroupData\n      } : g));\n    }\n    setActiveGroupId(tabId);\n  }, [openGroups, fetchGroupData]);\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-icon-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/GTIcon.png\",\n          alt: \"Entity Resolution\",\n          className: \"app-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabNavigation, {\n        openGroups: openGroups,\n        activeGroupId: activeGroupId,\n        onTabChange: handleTabChange,\n        onCloseTab: handleCloseGroup,\n        onAddNewTab: handleAddNewTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-icons\",\n        children: [/*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        displayGroups: displayGroups,\n        onGroupSelect: handleGroupSelect,\n        selectedGroup: activeGroupId,\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this) : activeGroup && groupData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-group-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: [/*#__PURE__*/_jsxDEV(TimeframeSelector, {\n            startDate: activeGroup.timeframe.startDate,\n            endDate: activeGroup.timeframe.endDate,\n            onStartDateChange: date => setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n              ...group,\n              timeframe: {\n                ...group.timeframe,\n                startDate: date\n              }\n            } : group)),\n            onEndDateChange: date => setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n              ...group,\n              timeframe: {\n                ...group.timeframe,\n                endDate: date\n              }\n            } : group)),\n            onApplyFilter: () => handleTimeframeApply(activeGroup.timeframe.startDate, activeGroup.timeframe.endDate),\n            onResetTimeframe: handleResetTimeframe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GraphVisualization, {\n            graphData: groupData.graphData,\n            onNodeDoubleClick: handleNodeDoubleClick,\n            onLinkClick: handleLinkedGroupOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EntityDetails, {\n          groupData: groupData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-group-selected\",\n        children: \"Select a group to view details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(NodeInfoPopup, {\n      node: selectedNode,\n      onClose: () => setSelectedNode(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0qZkfOXGH8lEozT77kaU4Ugt+yA=\", false, function () {\n  return [useGroups, useGroupData];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserIcon\");\n$RefreshReg$(_c2, \"MenuIcon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useGroups","useGroupData","useTimeframe","SearchPanel","GraphVisualization","EntityDetails","NodeInfoPopup","ToolBar","TabNavigation","TimeframeSelector","jsxDEV","_jsxDEV","API_BASE_URL","UserIcon","className","viewBox","width","height","fill","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuIcon","_c2","App","_s","fetchGroupInfo","groupId","response","fetch","ok","Error","data","json","displayValue","error","console","displayGroups","handleSearch","groupData","isLoading","fetchGroupData","activeGroupId","setActiveGroupId","selectedNode","setSelectedNode","openGroups","setOpenGroups","nextTabId","setNextTabId","groupInfo","setGroupInfo","handleLinkedGroupOpen","linkId","existingGroupIndex","findIndex","group","id","handleTabChange","groupDisplayName","prev","displayName","timeframe","startDate","endDate","handleGroupSelect","fetchedGroupData","Promise","all","newGroup","length","slice","handleTimeframeApply","then","map","handleResetTimeframe","handleAddNewTab","newTabId","handleCloseGroup","filter","_openGroups$","handleNodeDoubleClick","event","node","tabId","find","g","updatedGroupData","activeGroup","src","alt","onTabChange","onCloseTab","onAddNewTab","onGroupSelect","selectedGroup","onSearch","onStartDateChange","date","onEndDateChange","onApplyFilter","onResetTimeframe","graphData","onNodeDoubleClick","onLinkClick","onClose","_c3","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js"],"sourcesContent":["\n\nimport React, { useState, useCallback } from 'react';\nimport { useGroups, useGroupData, useTimeframe } from './hooks';\nimport SearchPanel from './SearchPanel';\nimport GraphVisualization from './GraphVisualization';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\nconst UserIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </svg>\n);\nfunction App() {\n  const fetchGroupInfo = useCallback(async (groupId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/group-info/${groupId}`);\n      if (!response.ok) throw new Error('Failed to fetch group info');\n      const data = await response.json();\n      return data.displayValue;\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n      return groupId; // Fallback to using the group ID if fetch fails\n    }\n  }, []);\n  const { displayGroups, handleSearch } = useGroups();\n  const { groupData, isLoading, error, fetchGroupData } = useGroupData();\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [nextTabId, setNextTabId] = useState(1);\n  const [groupInfo, setGroupInfo] = useState({});\n\n  // const fetchGroupInfo = useCallback(async (groupId) => {\n  //   try {\n  //     const response = await fetch(`${API_BASE_URL}/group-info/${groupId}`);\n  //     if (!response.ok) throw new Error('Failed to fetch group info');\n  //     const data = await response.json();\n  //     setGroupInfo(prevInfo => ({\n  //       ...prevInfo,\n  //       [groupId]: data.displayValue\n  //     }));\n  //     return data.displayValue;\n  //   } catch (error) {\n  //     console.error('Error fetching group info:', error);\n  //     return groupId; // Fallback to using the group ID if fetch fails\n  //   }\n    \n  // }, []);\n\n  const handleLinkedGroupOpen = useCallback(async (linkId) => {\n    // Check if the linked group is already open\n    const existingGroupIndex = openGroups.findIndex(group => group.id === linkId);\n    if (existingGroupIndex !== -1) {\n      handleTabChange(linkId);\n      return;\n    }\n\n    // Fetch the linked group data\n    await fetchGroupData(linkId);\n    const groupDisplayName = await fetchGroupInfo(linkId);\n\n    // Add the linked group as a new tab\n    setOpenGroups(prev => [\n      ...prev,\n      { \n        id: linkId, \n        displayName: groupDisplayName,\n        timeframe: { startDate: '', endDate: '' }\n      }\n    ]);\n    setActiveGroupId(linkId);\n  }, [openGroups, fetchGroupData, fetchGroupInfo]);\n\n  const handleGroupSelect = useCallback(async (groupId) => {\n    const existingGroupIndex = openGroups.findIndex(group => group.id === groupId);\n    if (existingGroupIndex !== -1) {\n      handleTabChange(groupId);\n      return;\n    }\n\n    try {\n      const [fetchedGroupData, groupDisplayName] = await Promise.all([\n        fetchGroupData(groupId),\n        fetchGroupInfo(groupId)\n      ]);\n\n      setOpenGroups(prev => {\n        const newGroup = { \n          id: groupId, \n          displayName: groupDisplayName,\n          data: fetchedGroupData,\n          timeframe: { startDate: '', endDate: '' }\n        };\n        if (prev.length === 0 || !prev[prev.length - 1].data) {\n          return [...prev.slice(0, -1), newGroup];\n        }\n        return [...prev, newGroup];\n      });\n      setActiveGroupId(groupId);\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n    }\n  }, [openGroups, fetchGroupData, fetchGroupInfo]);\n\n  const handleTimeframeApply = useCallback((startDate, endDate) => {\n    if (activeGroupId) {\n      fetchGroupData(activeGroupId, startDate, endDate).then(fetchedGroupData => {\n        setOpenGroups(prev => prev.map(group => \n          group.id === activeGroupId \n            ? { ...group, data: fetchedGroupData, timeframe: { startDate, endDate } }\n            : group\n        ));\n      });\n    }\n  }, [activeGroupId, fetchGroupData]);\n\n  \n  const handleResetTimeframe = useCallback(() => {\n    if (activeGroupId) {\n      fetchGroupData(activeGroupId, '', '').then(fetchedGroupData => {\n        setOpenGroups(prev => prev.map(group => \n          group.id === activeGroupId \n            ? { ...group, data: fetchedGroupData, timeframe: { startDate: '', endDate: '' } }\n            : group\n        ));\n      });\n    }\n  }, [activeGroupId, fetchGroupData]);\n\n\n  const handleAddNewTab = useCallback(() => {\n    const newTabId = `New Tab ${nextTabId}`;\n    setOpenGroups(prev => [...prev, { id: newTabId, displayName: newTabId, data: null, timeframe: { startDate: '', endDate: '' } }]);\n    setActiveGroupId(newTabId);\n    setNextTabId(prev => prev + 1);\n  }, [nextTabId]);\n\n  const handleCloseGroup = useCallback((groupId) => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      setActiveGroupId(openGroups[0]?.id || null);\n    }\n  }, [activeGroupId, openGroups]);\n\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  const handleTabChange = useCallback(async (tabId) => {\n    const group = openGroups.find(g => g.id === tabId);\n    if (group) {\n      // Fetch the latest data for the group, using its stored timeframe\n      const updatedGroupData = await fetchGroupData(tabId, group.timeframe.startDate, group.timeframe.endDate);\n      setOpenGroups(prev => prev.map(g => \n        g.id === tabId ? { ...g, data: updatedGroupData } : g\n      ));\n    }\n    setActiveGroupId(tabId);\n  }, [openGroups, fetchGroupData]);\n\n\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"app-icon-container\">\n          <img src=\"icons/GTIcon.png\" alt=\"Entity Resolution\" className=\"app-icon\" />\n        </div>\n        <TabNavigation \n          openGroups={openGroups}\n          activeGroupId={activeGroupId}\n          onTabChange={handleTabChange}\n          onCloseTab={handleCloseGroup}\n          onAddNewTab={handleAddNewTab}\n        />\n        <div className=\"header-icons\">\n          <UserIcon />\n          <MenuIcon />\n        </div>\n      </header>\n      <div className=\"app-content\">\n        <SearchPanel \n          displayGroups={displayGroups}\n          onGroupSelect={handleGroupSelect} \n          selectedGroup={activeGroupId}\n          onSearch={handleSearch}\n        />\n        {isLoading ? (\n          <div className=\"loading-indicator\">Loading...</div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : activeGroup && groupData ? (\n          <div className=\"active-group-content\">\n            \n            <div className=\"visualization-container\">\n            <TimeframeSelector\n                startDate={activeGroup.timeframe.startDate}\n                endDate={activeGroup.timeframe.endDate}\n                onStartDateChange={(date) => setOpenGroups(prev => prev.map(group => \n                  group.id === activeGroupId \n                    ? { ...group, timeframe: { ...group.timeframe, startDate: date } }\n                    : group\n                ))}\n                onEndDateChange={(date) => setOpenGroups(prev => prev.map(group => \n                  group.id === activeGroupId \n                    ? { ...group, timeframe: { ...group.timeframe, endDate: date } }\n                    : group\n                ))}\n                onApplyFilter={() => handleTimeframeApply(activeGroup.timeframe.startDate, activeGroup.timeframe.endDate)}\n                onResetTimeframe={handleResetTimeframe}\n              />\n              <GraphVisualization \n                graphData={groupData.graphData}\n                onNodeDoubleClick={handleNodeDoubleClick}\n                onLinkClick={handleLinkedGroupOpen}\n              />\n            </div>\n            <ToolBar />\n            <EntityDetails groupData={groupData} />\n          </div>\n        ) : (\n          <div className=\"no-group-selected\">Select a group to view details</div>\n        )}\n      </div>\n      {selectedNode && (\n        <NodeInfoPopup node={selectedNode} onClose={() => setSelectedNode(null)} />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}