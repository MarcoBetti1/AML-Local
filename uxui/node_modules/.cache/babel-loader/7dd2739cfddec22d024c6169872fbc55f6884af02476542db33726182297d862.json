{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, applyNodeChanges, applyEdgeChanges } from 'react-flow-renderer';\nimport SearchPanel from './SearchPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { MarkerType } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\nconst UserIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n_c = UserIcon;\nconst MenuIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n_c2 = MenuIcon;\nfunction App() {\n  _s();\n  const [allGroups, setAllGroups] = useState([]);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [timeframe, setTimeframe] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [appliedTimeframe, setAppliedTimeframe] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const handleNodeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      nodes: applyNodeChanges(changes, group.nodes)\n    } : group));\n  }, []);\n  const handleEdgeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      edges: applyEdgeChanges(changes, group.edges)\n    } : group));\n  }, []);\n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n      setError('Failed to fetch groups. Please try again later.');\n    }\n  };\n  const handleGroupSelect = useCallback(async groupId => {\n    if (openGroups.some(group => group.id === groupId)) {\n      setActiveGroupId(groupId);\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}/data`);\n      const data = await response.json();\n      if (data.graphData && Array.isArray(data.graphData.nodes) && Array.isArray(data.graphData.edges)) {\n        const newNodes = data.graphData.nodes.filter(node => node && node.type).map(node => ({\n          ...node,\n          position: getInitialNodePosition(node.type)\n        }));\n        const newEdges = data.graphData.edges.filter(edge => edge && edge.source && edge.target).map(edge => ({\n          ...edge,\n          type: 'smoothstep',\n          animated: true,\n          style: {\n            stroke: '#888'\n          },\n          markerEnd: {\n            type: MarkerType.ArrowClosed,\n            width: 20,\n            height: 20,\n            color: '#888'\n          }\n        }));\n        setOpenGroups(prev => [...prev, {\n          id: groupId,\n          data,\n          nodes: newNodes,\n          edges: newEdges\n        }]);\n        setActiveGroupId(groupId);\n      } else {\n        console.error('Unexpected data structure:', data);\n        setError('Received unexpected data structure from the server.');\n      }\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n      setError('Failed to fetch group data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [openGroups]);\n  const handleCloseGroup = useCallback(groupId => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      var _openGroups$;\n      setActiveGroupId(((_openGroups$ = openGroups[0]) === null || _openGroups$ === void 0 ? void 0 : _openGroups$.id) || null);\n    }\n  }, [activeGroupId, openGroups]);\n  const getInitialNodePosition = type => {\n    const centerX = 250;\n    const centerY = 250;\n    const radius = 200;\n    const angle = Math.random() * 2 * Math.PI;\n    switch (type) {\n      case 'Customer':\n        return {\n          x: centerX + radius * Math.cos(angle),\n          y: centerY + radius * Math.sin(angle)\n        };\n      case 'Counter-Party':\n        return {\n          x: centerX + radius * 0.8 * Math.cos(angle + Math.PI),\n          y: centerY + radius * 0.8 * Math.sin(angle + Math.PI)\n        };\n      case 'Business':\n        return {\n          x: centerX + radius * 0.6 * Math.cos(angle + Math.PI / 2),\n          y: centerY + radius * 0.6 * Math.sin(angle + Math.PI / 2)\n        };\n      case 'Transfer':\n      case 'BillPay':\n        return {\n          x: centerX + radius * 0.4 * Math.cos(angle),\n          y: centerY + radius * 0.4 * Math.sin(angle)\n        };\n      default:\n        return {\n          x: centerX + radius * Math.random(),\n          y: centerY + radius * Math.random()\n        };\n    }\n  };\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n  const filterNodesByTimeframe = (nodes, startDate, endDate) => {\n    if (!startDate && !endDate) return nodes;\n    return nodes.filter(node => {\n      var _node$data;\n      const timestamp = (_node$data = node.data) === null || _node$data === void 0 ? void 0 : _node$data.timestamp;\n      if (!timestamp) return true; // Keep nodes without timestamp\n      const nodeTime = new Date(timestamp).getTime();\n      if (startDate && endDate) {\n        return nodeTime >= new Date(startDate).getTime() && nodeTime <= new Date(endDate).getTime();\n      } else if (startDate) {\n        return nodeTime >= new Date(startDate).getTime();\n      } else if (endDate) {\n        return nodeTime <= new Date(endDate).getTime();\n      }\n      return true;\n    });\n  };\n  const filterEdgesByTimeframe = (edges, nodes) => {\n    const nodeIds = new Set(nodes.map(n => n.id));\n    return edges.filter(edge => nodeIds.has(edge.source) && nodeIds.has(edge.target));\n  };\n  const applyTimeframeFilter = () => {\n    if (!timeframe.startDate && !timeframe.endDate) {\n      alert(\"Please enter at least one date to apply the filter.\");\n      return;\n    }\n    setAppliedTimeframe(timeframe);\n  };\n  const filteredActiveGroup = activeGroup ? {\n    ...activeGroup,\n    nodes: filterNodesByTimeframe(activeGroup.nodes, appliedTimeframe.startDate, appliedTimeframe.endDate),\n    edges: filterEdgesByTimeframe(activeGroup.edges, activeGroup.nodes),\n    data: {\n      ...activeGroup.data,\n      graphData: {\n        nodes: filterNodesByTimeframe(activeGroup.nodes, appliedTimeframe.startDate, appliedTimeframe.endDate),\n        edges: filterEdgesByTimeframe(activeGroup.edges, activeGroup.nodes)\n      }\n    }\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        allGroups: allGroups,\n        onGroupSelect: handleGroupSelect,\n        selectedGroup: activeGroupId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : activeGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-group-content\",\n        children: [/*#__PURE__*/_jsxDEV(TimeframeSelector, {\n          startDate: timeframe.startDate,\n          endDate: timeframe.endDate,\n          onStartDateChange: date => setTimeframe(prev => ({\n            ...prev,\n            startDate: date\n          })),\n          onEndDateChange: date => setTimeframe(prev => ({\n            ...prev,\n            endDate: date\n          })),\n          onApplyFilter: applyTimeframeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VisualizationPanel, {\n          nodes: filteredActiveGroup.nodes,\n          edges: filteredActiveGroup.edges,\n          onNodesChange: changes => handleNodeChanges(changes, activeGroupId),\n          onEdgesChange: changes => handleEdgeChanges(changes, activeGroupId),\n          onNodeDoubleClick: handleNodeDoubleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EntityDetails, {\n          groupData: filteredActiveGroup.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-group-selected\",\n        children: \"Select a group to view details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(NodeInfoPopup, {\n      node: selectedNode,\n      onClose: () => setSelectedNode(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iSkzuVhOnY47dVu4r4oi/l99irI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserIcon\");\n$RefreshReg$(_c2, \"MenuIcon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","useNodesState","useEdgesState","applyNodeChanges","applyEdgeChanges","SearchPanel","VisualizationPanel","EntityDetails","NodeInfoPopup","ToolBar","TabNavigation","TimeframeSelector","MarkerType","jsxDEV","_jsxDEV","API_BASE_URL","UserIcon","className","viewBox","width","height","fill","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuIcon","_c2","App","_s","allGroups","setAllGroups","openGroups","setOpenGroups","activeGroupId","setActiveGroupId","isLoading","setIsLoading","error","setError","selectedNode","setSelectedNode","timeframe","setTimeframe","startDate","endDate","appliedTimeframe","setAppliedTimeframe","handleNodeChanges","changes","groupId","prev","map","group","id","nodes","handleEdgeChanges","edges","fetchAllGroups","response","fetch","data","json","Array","isArray","console","handleGroupSelect","some","graphData","newNodes","filter","node","type","position","getInitialNodePosition","newEdges","edge","source","target","animated","style","stroke","markerEnd","ArrowClosed","color","handleCloseGroup","_openGroups$","centerX","centerY","radius","angle","Math","random","PI","x","cos","y","sin","handleNodeDoubleClick","event","activeGroup","find","filterNodesByTimeframe","_node$data","timestamp","nodeTime","Date","getTime","filterEdgesByTimeframe","nodeIds","Set","n","has","applyTimeframeFilter","alert","filteredActiveGroup","onGroupSelect","selectedGroup","onStartDateChange","date","onEndDateChange","onApplyFilter","onNodesChange","onEdgesChange","onNodeDoubleClick","groupData","onClose","_c3","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { \n  useNodesState, \n  useEdgesState, \n  applyNodeChanges, \n  applyEdgeChanges \n} from 'react-flow-renderer';\nimport SearchPanel from './SearchPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { MarkerType } from 'react-flow-renderer';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\nconst UserIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </svg>\n);\n\nfunction App() {\n  const [allGroups, setAllGroups] = useState([]);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [timeframe, setTimeframe] = useState({ startDate: '', endDate: '' });\n  const [appliedTimeframe, setAppliedTimeframe] = useState({ startDate: '', endDate: '' });\n\n\n  const handleNodeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId \n        ? { ...group, nodes: applyNodeChanges(changes, group.nodes) }\n        : group\n    ));\n  }, []);\n\n  const handleEdgeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId \n        ? { ...group, edges: applyEdgeChanges(changes, group.edges) }\n        : group\n    ));\n  }, []);\n  \n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n      setError('Failed to fetch groups. Please try again later.');\n    }\n  };\n\n  const handleGroupSelect = useCallback(async (groupId) => {\n    if (openGroups.some(group => group.id === groupId)) {\n      setActiveGroupId(groupId);\n      return;\n    }\n  \n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}/data`);\n      const data = await response.json();\n      \n      if (data.graphData && Array.isArray(data.graphData.nodes) && Array.isArray(data.graphData.edges)) {\n        const newNodes = data.graphData.nodes\n          .filter(node => node && node.type)\n          .map(node => ({\n            ...node,\n            position: getInitialNodePosition(node.type),\n          }));\n  \n        const newEdges = data.graphData.edges\n          .filter(edge => edge && edge.source && edge.target)\n          .map(edge => ({\n            ...edge,\n            type: 'smoothstep',\n            animated: true,\n            style: { stroke: '#888' },\n            markerEnd: {\n              type: MarkerType.ArrowClosed,\n              width: 20,\n              height: 20,\n              color: '#888',\n            },\n          }));\n  \n        setOpenGroups(prev => [...prev, { id: groupId, data, nodes: newNodes, edges: newEdges }]);\n        setActiveGroupId(groupId);\n      } else {\n        console.error('Unexpected data structure:', data);\n        setError('Received unexpected data structure from the server.');\n      }\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n      setError('Failed to fetch group data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [openGroups]);\n\n  const handleCloseGroup = useCallback((groupId) => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      setActiveGroupId(openGroups[0]?.id || null);\n    }\n  }, [activeGroupId, openGroups]);\n\n  const getInitialNodePosition = (type) => {\n    const centerX = 250;\n    const centerY = 250;\n    const radius = 200;\n    const angle = Math.random() * 2 * Math.PI;\n    \n    switch(type) {\n      case 'Customer':\n        return { x: centerX + radius * Math.cos(angle), y: centerY + radius * Math.sin(angle) };\n      case 'Counter-Party':\n        return { x: centerX + radius * 0.8 * Math.cos(angle + Math.PI), y: centerY + radius * 0.8 * Math.sin(angle + Math.PI) };\n      case 'Business':\n        return { x: centerX + radius * 0.6 * Math.cos(angle + Math.PI/2), y: centerY + radius * 0.6 * Math.sin(angle + Math.PI/2) };\n      case 'Transfer':\n      case 'BillPay':\n        return { x: centerX + radius * 0.4 * Math.cos(angle), y: centerY + radius * 0.4 * Math.sin(angle) };\n      default:\n        return { x: centerX + radius * Math.random(), y: centerY + radius * Math.random() };\n    }\n  };\n\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n\n  const filterNodesByTimeframe = (nodes, startDate, endDate) => {\n    if (!startDate && !endDate) return nodes;\n    return nodes.filter(node => {\n      const timestamp = node.data?.timestamp;\n      if (!timestamp) return true; // Keep nodes without timestamp\n      const nodeTime = new Date(timestamp).getTime();\n      if (startDate && endDate) {\n        return nodeTime >= new Date(startDate).getTime() && nodeTime <= new Date(endDate).getTime();\n      } else if (startDate) {\n        return nodeTime >= new Date(startDate).getTime();\n      } else if (endDate) {\n        return nodeTime <= new Date(endDate).getTime();\n      }\n      return true;\n    });\n  };\n\n  const filterEdgesByTimeframe = (edges, nodes) => {\n    const nodeIds = new Set(nodes.map(n => n.id));\n    return edges.filter(edge => nodeIds.has(edge.source) && nodeIds.has(edge.target));\n  };\n\n  const applyTimeframeFilter = () => {\n    if (!timeframe.startDate && !timeframe.endDate) {\n      alert(\"Please enter at least one date to apply the filter.\");\n      return;\n    }\n    setAppliedTimeframe(timeframe);\n  };\n\n  const filteredActiveGroup = activeGroup ? {\n    ...activeGroup,\n    nodes: filterNodesByTimeframe(activeGroup.nodes, appliedTimeframe.startDate, appliedTimeframe.endDate),\n    edges: filterEdgesByTimeframe(activeGroup.edges, activeGroup.nodes),\n    data: {\n      ...activeGroup.data,\n      graphData: {\n        nodes: filterNodesByTimeframe(activeGroup.nodes, appliedTimeframe.startDate, appliedTimeframe.endDate),\n        edges: filterEdgesByTimeframe(activeGroup.edges, activeGroup.nodes),\n      },\n    },\n  } : null;\n\n  return (\n    <div className=\"app-container\">\n      {/* ... header and other components */}\n      <div className=\"app-content\">\n        <SearchPanel \n          allGroups={allGroups} \n          onGroupSelect={handleGroupSelect} \n          selectedGroup={activeGroupId}\n        />\n        {isLoading ? (\n          <div className=\"loading-indicator\">Loading...</div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : activeGroup ? (\n          <div className=\"active-group-content\">\n            <TimeframeSelector\n              startDate={timeframe.startDate}\n              endDate={timeframe.endDate}\n              onStartDateChange={(date) => setTimeframe(prev => ({ ...prev, startDate: date }))}\n              onEndDateChange={(date) => setTimeframe(prev => ({ ...prev, endDate: date }))}\n              onApplyFilter={applyTimeframeFilter}\n            />\n            <VisualizationPanel \n              nodes={filteredActiveGroup.nodes}\n              edges={filteredActiveGroup.edges}\n              onNodesChange={(changes) => handleNodeChanges(changes, activeGroupId)}\n              onEdgesChange={(changes) => handleEdgeChanges(changes, activeGroupId)}\n              onNodeDoubleClick={handleNodeDoubleClick}\n            />\n            <ToolBar />\n            <EntityDetails groupData={filteredActiveGroup.data} />\n          </div>\n        ) : (\n          <div className=\"no-group-selected\">Select a group to view details</div>\n        )}\n      </div>\n      {selectedNode && (\n        <NodeInfoPopup node={selectedNode} onClose={() => setSelectedNode(null)} />\n      )}\n    </div>\n  );\n\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}