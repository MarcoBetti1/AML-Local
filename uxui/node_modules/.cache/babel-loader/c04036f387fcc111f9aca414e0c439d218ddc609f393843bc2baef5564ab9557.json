{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useGroups, useGroupData, useTimeframe } from './hooks';\nimport SearchPanel from './SearchPanel';\nimport GraphVisualization from './GraphVisualization';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\nconst UserIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = UserIcon;\nconst MenuIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n_c2 = MenuIcon;\nfunction App() {\n  _s();\n  const {\n    displayGroups,\n    handleSearch\n  } = useGroups();\n  const {\n    isLoading,\n    error,\n    fetchGroupData\n  } = useGroupData();\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [nextTabId, setNextTabId] = useState(1);\n  const fetchGroupInfo = useCallback(async groupId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/group-info/${groupId}`);\n      if (!response.ok) throw new Error('Failed to fetch group info');\n      const data = await response.json();\n      return data.displayValue;\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n      return groupId; // Fallback to using the group ID if fetch fails\n    }\n  }, []);\n  const handleGroupSelect = useCallback(async groupId => {\n    const existingGroup = openGroups.find(group => group.id === groupId);\n    if (existingGroup) {\n      setActiveGroupId(groupId);\n      return;\n    }\n    try {\n      const [fetchedGroupData, groupDisplayName] = await Promise.all([fetchGroupData(groupId), fetchGroupInfo(groupId)]);\n      const newGroup = {\n        id: groupId,\n        displayName: groupDisplayName,\n        data: fetchedGroupData,\n        timeframe: {\n          startDate: '',\n          endDate: ''\n        }\n      };\n      setOpenGroups(prev => [...prev, newGroup]);\n      setActiveGroupId(groupId);\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n    }\n  }, [openGroups, fetchGroupData, fetchGroupInfo]);\n  const handleLinkedGroupOpen = useCallback(async linkId => {\n    const existingGroup = openGroups.find(group => group.id === linkId);\n    if (existingGroup) {\n      setActiveGroupId(linkId);\n      return;\n    }\n    try {\n      const [fetchedGroupData, groupDisplayName] = await Promise.all([fetchGroupData(linkId), fetchGroupInfo(linkId)]);\n      const newGroup = {\n        id: linkId,\n        displayName: groupDisplayName,\n        data: fetchedGroupData,\n        timeframe: {\n          startDate: '',\n          endDate: ''\n        }\n      };\n      setOpenGroups(prev => [...prev, newGroup]);\n      setActiveGroupId(linkId);\n    } catch (error) {\n      console.error('Failed to open linked group:', error);\n    }\n  }, [openGroups, fetchGroupData, fetchGroupInfo]);\n  const handleTimeframeApply = useCallback((startDate, endDate) => {\n    if (activeGroupId) {\n      fetchGroupData(activeGroupId, startDate, endDate).then(fetchedGroupData => {\n        setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n          ...group,\n          data: fetchedGroupData,\n          timeframe: {\n            startDate,\n            endDate\n          }\n        } : group));\n      });\n    }\n  }, [activeGroupId, fetchGroupData]);\n  const handleResetTimeframe = useCallback(() => {\n    if (activeGroupId) {\n      fetchGroupData(activeGroupId, '', '').then(fetchedGroupData => {\n        setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n          ...group,\n          data: fetchedGroupData,\n          timeframe: {\n            startDate: '',\n            endDate: ''\n          }\n        } : group));\n      });\n    }\n  }, [activeGroupId, fetchGroupData]);\n  const handleAddNewTab = useCallback(() => {\n    const newTabId = `New Tab ${nextTabId}`;\n    setOpenGroups(prev => [...prev, {\n      id: newTabId,\n      displayName: newTabId,\n      data: null,\n      timeframe: {\n        startDate: '',\n        endDate: ''\n      }\n    }]);\n    setActiveGroupId(newTabId);\n    setNextTabId(prev => prev + 1);\n  }, [nextTabId]);\n  const handleCloseGroup = useCallback(groupId => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      const remainingGroups = openGroups.filter(group => group.id !== groupId);\n      setActiveGroupId(remainingGroups.length > 0 ? remainingGroups[remainingGroups.length - 1].id : null);\n    }\n  }, [activeGroupId, openGroups]);\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  const handleTabChange = useCallback(tabId => {\n    setActiveGroupId(tabId);\n  }, []);\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-icon-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/GTIcon.png\",\n          alt: \"Entity Resolution\",\n          className: \"app-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabNavigation, {\n        openGroups: openGroups,\n        activeGroupId: activeGroupId,\n        onTabChange: handleTabChange,\n        onCloseTab: handleCloseGroup,\n        onAddNewTab: handleAddNewTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-icons\",\n        children: [/*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        displayGroups: displayGroups,\n        onGroupSelect: handleGroupSelect,\n        selectedGroup: activeGroupId,\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this) : activeGroup && activeGroup.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-group-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: [/*#__PURE__*/_jsxDEV(TimeframeSelector, {\n            startDate: activeGroup.timeframe.startDate,\n            endDate: activeGroup.timeframe.endDate,\n            onStartDateChange: date => setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n              ...group,\n              timeframe: {\n                ...group.timeframe,\n                startDate: date\n              }\n            } : group)),\n            onEndDateChange: date => setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n              ...group,\n              timeframe: {\n                ...group.timeframe,\n                endDate: date\n              }\n            } : group)),\n            onApplyFilter: () => handleTimeframeApply(activeGroup.timeframe.startDate, activeGroup.timeframe.endDate),\n            onResetTimeframe: handleResetTimeframe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GraphVisualization, {\n            graphData: activeGroup.data.graphData,\n            onNodeDoubleClick: handleNodeDoubleClick,\n            onLinkClick: handleLinkedGroupOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EntityDetails, {\n          groupData: activeGroup.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-group-selected\",\n        children: \"Select a group to view details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(NodeInfoPopup, {\n      node: selectedNode,\n      onClose: () => setSelectedNode(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aRMjJDx8k5bOdlRZMRIac9A4DGE=\", false, function () {\n  return [useGroups, useGroupData];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserIcon\");\n$RefreshReg$(_c2, \"MenuIcon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useGroups","useGroupData","useTimeframe","SearchPanel","GraphVisualization","EntityDetails","NodeInfoPopup","ToolBar","TabNavigation","TimeframeSelector","jsxDEV","_jsxDEV","API_BASE_URL","UserIcon","className","viewBox","width","height","fill","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuIcon","_c2","App","_s","displayGroups","handleSearch","isLoading","error","fetchGroupData","activeGroupId","setActiveGroupId","selectedNode","setSelectedNode","openGroups","setOpenGroups","nextTabId","setNextTabId","fetchGroupInfo","groupId","response","fetch","ok","Error","data","json","displayValue","console","handleGroupSelect","existingGroup","find","group","id","fetchedGroupData","groupDisplayName","Promise","all","newGroup","displayName","timeframe","startDate","endDate","prev","handleLinkedGroupOpen","linkId","handleTimeframeApply","then","map","handleResetTimeframe","handleAddNewTab","newTabId","handleCloseGroup","filter","remainingGroups","length","handleNodeDoubleClick","event","node","handleTabChange","tabId","activeGroup","src","alt","onTabChange","onCloseTab","onAddNewTab","onGroupSelect","selectedGroup","onSearch","onStartDateChange","date","onEndDateChange","onApplyFilter","onResetTimeframe","graphData","onNodeDoubleClick","onLinkClick","groupData","onClose","_c3","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js"],"sourcesContent":["\n\nimport React, { useState, useCallback } from 'react';\nimport { useGroups, useGroupData, useTimeframe } from './hooks';\nimport SearchPanel from './SearchPanel';\nimport GraphVisualization from './GraphVisualization';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\nconst UserIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </svg>\n);\nfunction App() {\n  const { displayGroups, handleSearch } = useGroups();\n  const { isLoading, error, fetchGroupData } = useGroupData();\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [nextTabId, setNextTabId] = useState(1);\n\n  const fetchGroupInfo = useCallback(async (groupId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/group-info/${groupId}`);\n      if (!response.ok) throw new Error('Failed to fetch group info');\n      const data = await response.json();\n      return data.displayValue;\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n      return groupId; // Fallback to using the group ID if fetch fails\n    }\n  }, []);\n\n  const handleGroupSelect = useCallback(async (groupId) => {\n    const existingGroup = openGroups.find(group => group.id === groupId);\n    if (existingGroup) {\n      setActiveGroupId(groupId);\n      return;\n    }\n\n    try {\n      const [fetchedGroupData, groupDisplayName] = await Promise.all([\n        fetchGroupData(groupId),\n        fetchGroupInfo(groupId)\n      ]);\n\n      const newGroup = { \n        id: groupId, \n        displayName: groupDisplayName,\n        data: fetchedGroupData,\n        timeframe: { startDate: '', endDate: '' }\n      };\n\n      setOpenGroups(prev => [...prev, newGroup]);\n      setActiveGroupId(groupId);\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n    }\n  }, [openGroups, fetchGroupData, fetchGroupInfo]);\n\n  const handleLinkedGroupOpen = useCallback(async (linkId) => {\n    const existingGroup = openGroups.find(group => group.id === linkId);\n    if (existingGroup) {\n      setActiveGroupId(linkId);\n      return;\n    }\n\n    try {\n      const [fetchedGroupData, groupDisplayName] = await Promise.all([\n        fetchGroupData(linkId),\n        fetchGroupInfo(linkId)\n      ]);\n\n      const newGroup = { \n        id: linkId, \n        displayName: groupDisplayName,\n        data: fetchedGroupData,\n        timeframe: { startDate: '', endDate: '' }\n      };\n\n      setOpenGroups(prev => [...prev, newGroup]);\n      setActiveGroupId(linkId);\n    } catch (error) {\n      console.error('Failed to open linked group:', error);\n    }\n  }, [openGroups, fetchGroupData, fetchGroupInfo]);\n\n  const handleTimeframeApply = useCallback((startDate, endDate) => {\n    if (activeGroupId) {\n      fetchGroupData(activeGroupId, startDate, endDate).then(fetchedGroupData => {\n        setOpenGroups(prev => prev.map(group => \n          group.id === activeGroupId \n            ? { ...group, data: fetchedGroupData, timeframe: { startDate, endDate } }\n            : group\n        ));\n      });\n    }\n  }, [activeGroupId, fetchGroupData]);\n\n  const handleResetTimeframe = useCallback(() => {\n    if (activeGroupId) {\n      fetchGroupData(activeGroupId, '', '').then(fetchedGroupData => {\n        setOpenGroups(prev => prev.map(group => \n          group.id === activeGroupId \n            ? { ...group, data: fetchedGroupData, timeframe: { startDate: '', endDate: '' } }\n            : group\n        ));\n      });\n    }\n  }, [activeGroupId, fetchGroupData]);\n\n  const handleAddNewTab = useCallback(() => {\n    const newTabId = `New Tab ${nextTabId}`;\n    setOpenGroups(prev => [...prev, { id: newTabId, displayName: newTabId, data: null, timeframe: { startDate: '', endDate: '' } }]);\n    setActiveGroupId(newTabId);\n    setNextTabId(prev => prev + 1);\n  }, [nextTabId]);\n\n  const handleCloseGroup = useCallback((groupId) => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      const remainingGroups = openGroups.filter(group => group.id !== groupId);\n      setActiveGroupId(remainingGroups.length > 0 ? remainingGroups[remainingGroups.length - 1].id : null);\n    }\n  }, [activeGroupId, openGroups]);\n\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  const handleTabChange = useCallback((tabId) => {\n    setActiveGroupId(tabId);\n  }, []);\n\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"app-icon-container\">\n          <img src=\"icons/GTIcon.png\" alt=\"Entity Resolution\" className=\"app-icon\" />\n        </div>\n        <TabNavigation \n          openGroups={openGroups}\n          activeGroupId={activeGroupId}\n          onTabChange={handleTabChange}\n          onCloseTab={handleCloseGroup}\n          onAddNewTab={handleAddNewTab}\n        />\n        <div className=\"header-icons\">\n          <UserIcon />\n          <MenuIcon />\n        </div>\n      </header>\n      <div className=\"app-content\">\n        <SearchPanel \n          displayGroups={displayGroups}\n          onGroupSelect={handleGroupSelect} \n          selectedGroup={activeGroupId}\n          onSearch={handleSearch}\n        />\n        {isLoading ? (\n          <div className=\"loading-indicator\">Loading...</div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : activeGroup && activeGroup.data ? (\n          <div className=\"active-group-content\">\n            <div className=\"visualization-container\">\n              <TimeframeSelector\n                startDate={activeGroup.timeframe.startDate}\n                endDate={activeGroup.timeframe.endDate}\n                onStartDateChange={(date) => setOpenGroups(prev => prev.map(group => \n                  group.id === activeGroupId \n                    ? { ...group, timeframe: { ...group.timeframe, startDate: date } }\n                    : group\n                ))}\n                onEndDateChange={(date) => setOpenGroups(prev => prev.map(group => \n                  group.id === activeGroupId \n                    ? { ...group, timeframe: { ...group.timeframe, endDate: date } }\n                    : group\n                ))}\n                onApplyFilter={() => handleTimeframeApply(activeGroup.timeframe.startDate, activeGroup.timeframe.endDate)}\n                onResetTimeframe={handleResetTimeframe}\n              />\n              <GraphVisualization \n                graphData={activeGroup.data.graphData}\n                onNodeDoubleClick={handleNodeDoubleClick}\n                onLinkClick={handleLinkedGroupOpen}\n              />\n            </div>\n            <ToolBar />\n            <EntityDetails groupData={activeGroup.data} />\n          </div>\n        ) : (\n          <div className=\"no-group-selected\">Select a group to view details</div>\n        )}\n      </div>\n      {selectedNode && (\n        <NodeInfoPopup node={selectedNode} onClose={() => setSelectedNode(null)} />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}