{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/VisualizationPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport ReactFlow, { Controls, Background, MarkerType, getBezierPath } from 'react-flow-renderer';\nimport nodeTypes from './nodeTypes';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  label,\n  style = {},\n  markerEnd\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  const [edgePathString] = edgePath;\n  const [labelX, labelY] = edgePath[1];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      id: id,\n      style: {\n        ...style,\n        strokeWidth: 2,\n        fill: 'none'\n      },\n      className: \"react-flow__edge-path\",\n      d: edgePathString,\n      markerEnd: markerEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), label && /*#__PURE__*/_jsxDEV(\"text\", {\n      style: {\n        fill: '#888',\n        fontSize: '12px',\n        fontWeight: 700,\n        paintOrder: 'stroke',\n        stroke: '#fff',\n        strokeWidth: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textPath\", {\n        href: `#${id}`,\n        style: {\n          fontSize: '12px'\n        },\n        startOffset: \"50%\",\n        textAnchor: \"middle\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = CustomEdge;\nfunction VisualizationPanel({\n  nodes,\n  edges,\n  onNodesChange,\n  onEdgesChange,\n  onNodeDoubleClick\n}) {\n  _s();\n  const edgesWithLabels = useMemo(() => {\n    return edges.map(edge => {\n      const sourceNode = nodes.find(node => node.id === edge.source);\n      const targetNode = nodes.find(node => node.id === edge.target);\n      let label = '';\n      if (sourceNode.type === 'Customer' || targetNode.type === 'Customer') {\n        label = `Customer ${targetNode.type === 'Transfer' || targetNode.type === 'BillPay' ? '‚Üí ' + targetNode.type : ''}`;\n      } else if (sourceNode.type === 'Counter-Party' || targetNode.type === 'Counter-Party') {\n        label = `Counter-Party ${targetNode.type === 'Transfer' ? '‚Üí Transfer' : ''}`;\n      }\n      return {\n        ...edge,\n        type: 'custom',\n        label,\n        style: {\n          stroke: '#888'\n        },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          color: '#888'\n        }\n      };\n    });\n  }, [edges, nodes]);\n  const edgeTypes = useMemo(() => ({\n    custom: CustomEdge\n  }), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualization-panel\",\n    children: nodes.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edgesWithLabels,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        nodeTypes: nodeTypes,\n        edgeTypes: edgeTypes,\n        onNodeDoubleClick: onNodeDoubleClick,\n        fitView: true,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#f0f0f0\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"graph-control-icon\",\n          children: \"\\u2699\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"graph-control-icon\",\n          children: \"\\uD83D\\uDD52\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a group to view its visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(VisualizationPanel, \"sxRMYMlHUukmdvubzQG85n7V5c0=\");\n_c2 = VisualizationPanel;\nexport default VisualizationPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomEdge\");\n$RefreshReg$(_c2, \"VisualizationPanel\");","map":{"version":3,"names":["React","useMemo","ReactFlow","Controls","Background","MarkerType","getBezierPath","nodeTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomEdge","id","sourceX","sourceY","targetX","targetY","label","style","markerEnd","edgePath","edgePathString","labelX","labelY","children","strokeWidth","fill","className","d","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","paintOrder","stroke","href","startOffset","textAnchor","_c","VisualizationPanel","nodes","edges","onNodesChange","onEdgesChange","onNodeDoubleClick","_s","edgesWithLabels","map","edge","sourceNode","find","node","source","targetNode","target","type","ArrowClosed","color","edgeTypes","custom","length","fitView","width","height","gap","_c2","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/VisualizationPanel.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport ReactFlow, { \n  Controls, \n  Background,\n  MarkerType,\n  getBezierPath,\n} from 'react-flow-renderer';\nimport nodeTypes from './nodeTypes';\n\nconst CustomEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  label,\n  style = {},\n  markerEnd,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  });\n\n  const [edgePathString] = edgePath;\n  const [labelX, labelY] = edgePath[1];\n\n  return (\n    <>\n      <path\n        id={id}\n        style={{...style, strokeWidth: 2, fill: 'none'}}\n        className=\"react-flow__edge-path\"\n        d={edgePathString}\n        markerEnd={markerEnd}\n      />\n      {label && (\n        <text\n          style={{\n            fill: '#888',\n            fontSize: '12px',\n            fontWeight: 700,\n            paintOrder: 'stroke',\n            stroke: '#fff',\n            strokeWidth: 3,\n          }}\n        >\n          <textPath\n            href={`#${id}`}\n            style={{ fontSize: '12px' }}\n            startOffset=\"50%\"\n            textAnchor=\"middle\"\n          >\n            {label}\n          </textPath>\n        </text>\n      )}\n    </>\n  );\n};\n\nfunction VisualizationPanel({ nodes, edges, onNodesChange, onEdgesChange, onNodeDoubleClick }) {\n  const edgesWithLabels = useMemo(() => {\n    return edges.map(edge => {\n      const sourceNode = nodes.find(node => node.id === edge.source);\n      const targetNode = nodes.find(node => node.id === edge.target);\n      let label = '';\n      \n      if (sourceNode.type === 'Customer' || targetNode.type === 'Customer') {\n        label = `Customer ${targetNode.type === 'Transfer' || targetNode.type === 'BillPay' ? '‚Üí ' + targetNode.type : ''}`;\n      } else if (sourceNode.type === 'Counter-Party' || targetNode.type === 'Counter-Party') {\n        label = `Counter-Party ${targetNode.type === 'Transfer' ? '‚Üí Transfer' : ''}`;\n      }\n\n      return {\n        ...edge,\n        type: 'custom',\n        label,\n        style: { stroke: '#888' },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          color: '#888',\n        },\n      };\n    });\n  }, [edges, nodes]);\n\n  const edgeTypes = useMemo(() => ({\n    custom: CustomEdge,\n  }), []);\n\n  return (\n    <div className=\"visualization-panel\">\n      {nodes.length > 0 ? (\n        <>\n          <ReactFlow \n            nodes={nodes}\n            edges={edgesWithLabels}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            nodeTypes={nodeTypes}\n            edgeTypes={edgeTypes}\n            onNodeDoubleClick={onNodeDoubleClick}\n            fitView\n            style={{ width: '100%', height: '100%' }}\n          >\n            <Controls />\n            <Background color=\"#f0f0f0\" gap={16} />\n          </ReactFlow>\n          <div className=\"graph-controls\">\n            <span className=\"graph-control-icon\">‚öôÔ∏è</span>\n            <span className=\"graph-control-icon\">üïí</span>\n          </div>\n        </>\n      ) : (\n        <p>Select a group to view its visualization</p>\n      )}\n    </div>\n  );\n}\n\nexport default VisualizationPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}