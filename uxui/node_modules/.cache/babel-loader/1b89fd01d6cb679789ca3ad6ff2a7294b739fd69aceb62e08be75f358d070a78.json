{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/TabNavigation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabNavigation = ({\n  openGroups,\n  activeGroupId,\n  onTabChange,\n  onCloseTab\n}) => {\n  _s();\n  const [groupDisplayNames, setGroupDisplayNames] = useState({});\n  useEffect(() => {\n    const fetchGroupInfo = async groupId => {\n      try {\n        const response = await fetch(`/api/group-info/${groupId}`);\n        if (!response.ok) throw new Error('Failed to fetch group info');\n        const data = await response.json();\n        setGroupDisplayNames(prev => ({\n          ...prev,\n          [groupId]: data.displayValue\n        }));\n      } catch (error) {\n        console.error('Error fetching group info:', error);\n        setGroupDisplayNames(prev => ({\n          ...prev,\n          [groupId]: groupId\n        })); // Fallback to groupId if fetch fails\n      }\n    };\n    openGroups.forEach(group => {\n      if (!groupDisplayNames[group.id]) {\n        fetchGroupInfo(group.id);\n      }\n    });\n  }, [openGroups, groupDisplayNames]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-navigation\",\n    children: openGroups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tab ${group.id === activeGroupId ? 'active' : ''}`,\n      onClick: () => onTabChange(group.id),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: groupDisplayNames[group.id] || group.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.stopPropagation();\n          onCloseTab(group.id);\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, group.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TabNavigation, \"NpzrQCZ7DCyvwOd8t6coPuv1gkM=\");\n_c = TabNavigation;\nexport default TabNavigation;\nvar _c;\n$RefreshReg$(_c, \"TabNavigation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TabNavigation","openGroups","activeGroupId","onTabChange","onCloseTab","_s","groupDisplayNames","setGroupDisplayNames","fetchGroupInfo","groupId","response","fetch","ok","Error","data","json","prev","displayValue","error","console","forEach","group","id","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/TabNavigation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TabNavigation = ({ openGroups, activeGroupId, onTabChange, onCloseTab }) => {\n  const [groupDisplayNames, setGroupDisplayNames] = useState({});\n\n  useEffect(() => {\n    const fetchGroupInfo = async (groupId) => {\n      try {\n        const response = await fetch(`/api/group-info/${groupId}`);\n        if (!response.ok) throw new Error('Failed to fetch group info');\n        const data = await response.json();\n        setGroupDisplayNames(prev => ({ ...prev, [groupId]: data.displayValue }));\n      } catch (error) {\n        console.error('Error fetching group info:', error);\n        setGroupDisplayNames(prev => ({ ...prev, [groupId]: groupId })); // Fallback to groupId if fetch fails\n      }\n    };\n\n    openGroups.forEach(group => {\n      if (!groupDisplayNames[group.id]) {\n        fetchGroupInfo(group.id);\n      }\n    });\n  }, [openGroups, groupDisplayNames]);\n\n  return (\n    <div className=\"tab-navigation\">\n      {openGroups.map(group => (\n        <div \n          key={group.id} \n          className={`tab ${group.id === activeGroupId ? 'active' : ''}`}\n          onClick={() => onTabChange(group.id)}\n        >\n          <span>{groupDisplayNames[group.id] || group.id}</span>\n          <button onClick={(e) => { e.stopPropagation(); onCloseTab(group.id); }}>Ã—</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TabNavigation;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEC,aAAa;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAOC,OAAO,IAAK;MACxC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmBF,OAAO,EAAE,CAAC;QAC1D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCR,oBAAoB,CAACS,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACP,OAAO,GAAGK,IAAI,CAACG;QAAa,CAAC,CAAC,CAAC;MAC3E,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDX,oBAAoB,CAACS,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACP,OAAO,GAAGA;QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MACnE;IACF,CAAC;IAEDR,UAAU,CAACmB,OAAO,CAACC,KAAK,IAAI;MAC1B,IAAI,CAACf,iBAAiB,CAACe,KAAK,CAACC,EAAE,CAAC,EAAE;QAChCd,cAAc,CAACa,KAAK,CAACC,EAAE,CAAC;MAC1B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACrB,UAAU,EAAEK,iBAAiB,CAAC,CAAC;EAEnC,oBACEP,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BvB,UAAU,CAACwB,GAAG,CAACJ,KAAK,iBACnBtB,OAAA;MAEEwB,SAAS,EAAE,OAAOF,KAAK,CAACC,EAAE,KAAKpB,aAAa,GAAG,QAAQ,GAAG,EAAE,EAAG;MAC/DwB,OAAO,EAAEA,CAAA,KAAMvB,WAAW,CAACkB,KAAK,CAACC,EAAE,CAAE;MAAAE,QAAA,gBAErCzB,OAAA;QAAAyB,QAAA,EAAOlB,iBAAiB,CAACe,KAAK,CAACC,EAAE,CAAC,IAAID,KAAK,CAACC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtD/B,OAAA;QAAQ2B,OAAO,EAAGK,CAAC,IAAK;UAAEA,CAAC,CAACC,eAAe,CAAC,CAAC;UAAE5B,UAAU,CAACiB,KAAK,CAACC,EAAE,CAAC;QAAE,CAAE;QAAAE,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAL7ET,KAAK,CAACC,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CArCIL,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}