{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/GraphVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, applyNodeChanges, applyEdgeChanges, MarkerType } from 'react-flow-renderer';\nimport nodeTypes from './nodeTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getInitialNodePosition = type => {\n  // ... (keep the existing getInitialNodePosition function)\n};\nconst GraphVisualization = ({\n  graphData,\n  onNodeDoubleClick,\n  onLinkClick\n}) => {\n  _s();\n  const initialNodes = useMemo(() => graphData.nodes.map(node => ({\n    ...node,\n    position: getInitialNodePosition(node.type),\n    data: {\n      ...node.data,\n      displayName: node.data.label,\n      onLinkClick: node.data.link ? () => onLinkClick(node.data.link) : undefined\n    }\n  })), [graphData.nodes, onLinkClick]);\n  const initialEdges = useMemo(() => graphData.edges.map(edge => ({\n    ...edge,\n    type: 'straight',\n    animated: false,\n    style: {\n      stroke: '#888',\n      strokeWidth: 2\n    },\n    markerEnd: {\n      type: MarkerType.ArrowClosed,\n      color: '#888'\n    }\n  })), [graphData.edges]);\n  const [nodes, setNodes] = useNodesState(initialNodes);\n  const [edges, setEdges] = useEdgesState(initialEdges);\n  const onNodesChange = useCallback(changes => setNodes(nds => applyNodeChanges(changes, nds)), [setNodes]);\n  const onEdgesChange = useCallback(changes => setEdges(eds => applyEdgeChanges(changes, eds)), [setEdges]);\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onNodeDoubleClick: onNodeDoubleClick,\n    nodeTypes: nodeTypes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphVisualization, \"fldQ3R4KFR0o2rUP1BYiL/3Ew24=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","useCallback","useMemo","ReactFlow","useNodesState","useEdgesState","applyNodeChanges","applyEdgeChanges","MarkerType","nodeTypes","jsxDEV","_jsxDEV","getInitialNodePosition","type","GraphVisualization","graphData","onNodeDoubleClick","onLinkClick","_s","initialNodes","nodes","map","node","position","data","displayName","label","link","undefined","initialEdges","edges","edge","animated","style","stroke","strokeWidth","markerEnd","ArrowClosed","color","setNodes","setEdges","onNodesChange","changes","nds","onEdgesChange","eds","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/GraphVisualization.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport ReactFlow, {\n  useNodesState,\n  useEdgesState,\n  applyNodeChanges,\n  applyEdgeChanges,\n  MarkerType,\n} from 'react-flow-renderer';\nimport nodeTypes from './nodeTypes';\n\nconst getInitialNodePosition = (type) => {\n  // ... (keep the existing getInitialNodePosition function)\n};\n\nconst GraphVisualization = ({ graphData, onNodeDoubleClick, onLinkClick }) => {\n  const initialNodes = useMemo(() => graphData.nodes.map(node => ({\n    ...node,\n    position: getInitialNodePosition(node.type),\n    data: {\n      ...node.data,\n      displayName: node.data.label,\n      onLinkClick: node.data.link ? () => onLinkClick(node.data.link) : undefined\n    }\n  })), [graphData.nodes, onLinkClick]);\n\n  const initialEdges = useMemo(() => graphData.edges.map(edge => ({\n    ...edge,\n    type: 'straight',\n    animated: false,\n    style: { stroke: '#888', strokeWidth: 2 },\n    markerEnd: {\n      type: MarkerType.ArrowClosed,\n      color: '#888',\n    },\n  })), [graphData.edges]);\n\n  const [nodes, setNodes] = useNodesState(initialNodes);\n  const [edges, setEdges] = useEdgesState(initialEdges);\n\n  const onNodesChange = useCallback(\n    (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\n    [setNodes]\n  );\n  const onEdgesChange = useCallback(\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n    [setEdges]\n  );\n\n  return (\n    <ReactFlow\n      nodes={nodes}\n      edges={edges}\n      onNodesChange={onNodesChange}\n      onEdgesChange={onEdgesChange}\n      onNodeDoubleClick={onNodeDoubleClick}\n      nodeTypes={nodeTypes}\n    />\n  );\n};\n\nexport default GraphVisualization;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACnD,OAAOC,SAAS,IACdC,aAAa,EACbC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,EAChBC,UAAU,QACL,qBAAqB;AAC5B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,sBAAsB,GAAIC,IAAI,IAAK;EACvC;AAAA,CACD;AAED,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,iBAAiB;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAMC,YAAY,GAAGjB,OAAO,CAAC,MAAMa,SAAS,CAACK,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;IAC9D,GAAGA,IAAI;IACPC,QAAQ,EAAEX,sBAAsB,CAACU,IAAI,CAACT,IAAI,CAAC;IAC3CW,IAAI,EAAE;MACJ,GAAGF,IAAI,CAACE,IAAI;MACZC,WAAW,EAAEH,IAAI,CAACE,IAAI,CAACE,KAAK;MAC5BT,WAAW,EAAEK,IAAI,CAACE,IAAI,CAACG,IAAI,GAAG,MAAMV,WAAW,CAACK,IAAI,CAACE,IAAI,CAACG,IAAI,CAAC,GAAGC;IACpE;EACF,CAAC,CAAC,CAAC,EAAE,CAACb,SAAS,CAACK,KAAK,EAAEH,WAAW,CAAC,CAAC;EAEpC,MAAMY,YAAY,GAAG3B,OAAO,CAAC,MAAMa,SAAS,CAACe,KAAK,CAACT,GAAG,CAACU,IAAI,KAAK;IAC9D,GAAGA,IAAI;IACPlB,IAAI,EAAE,UAAU;IAChBmB,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,WAAW,EAAE;IAAE,CAAC;IACzCC,SAAS,EAAE;MACTvB,IAAI,EAAEL,UAAU,CAAC6B,WAAW;MAC5BC,KAAK,EAAE;IACT;EACF,CAAC,CAAC,CAAC,EAAE,CAACvB,SAAS,CAACe,KAAK,CAAC,CAAC;EAEvB,MAAM,CAACV,KAAK,EAAEmB,QAAQ,CAAC,GAAGnC,aAAa,CAACe,YAAY,CAAC;EACrD,MAAM,CAACW,KAAK,EAAEU,QAAQ,CAAC,GAAGnC,aAAa,CAACwB,YAAY,CAAC;EAErD,MAAMY,aAAa,GAAGxC,WAAW,CAC9ByC,OAAO,IAAKH,QAAQ,CAAEI,GAAG,IAAKrC,gBAAgB,CAACoC,OAAO,EAAEC,GAAG,CAAC,CAAC,EAC9D,CAACJ,QAAQ,CACX,CAAC;EACD,MAAMK,aAAa,GAAG3C,WAAW,CAC9ByC,OAAO,IAAKF,QAAQ,CAAEK,GAAG,IAAKtC,gBAAgB,CAACmC,OAAO,EAAEG,GAAG,CAAC,CAAC,EAC9D,CAACL,QAAQ,CACX,CAAC;EAED,oBACE7B,OAAA,CAACR,SAAS;IACRiB,KAAK,EAAEA,KAAM;IACbU,KAAK,EAAEA,KAAM;IACbW,aAAa,EAAEA,aAAc;IAC7BG,aAAa,EAAEA,aAAc;IAC7B5B,iBAAiB,EAAEA,iBAAkB;IACrCP,SAAS,EAAEA;EAAU;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEN,CAAC;AAAC/B,EAAA,CA5CIJ,kBAAkB;EAAA,QAsBIV,aAAa,EACbC,aAAa;AAAA;AAAA6C,EAAA,GAvBnCpC,kBAAkB;AA8CxB,eAAeA,kBAAkB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}