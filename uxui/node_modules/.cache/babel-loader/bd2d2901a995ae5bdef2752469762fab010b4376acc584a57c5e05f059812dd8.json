{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, applyNodeChanges, applyEdgeChanges } from 'react-flow-renderer';\nimport SearchPanel from './SearchPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { MarkerType } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\nconst UserIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n_c = UserIcon;\nconst MenuIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n_c2 = MenuIcon;\nfunction App() {\n  _s();\n  const [allGroups, setAllGroups] = useState([]);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [displayGroups, setDisplayGroups] = useState([]);\n  const [timeframe, setTimeframe] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [appliedTimeframe, setAppliedTimeframe] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [nextTabId, setNextTabId] = useState(1);\n  const [groupInfo, setGroupInfo] = useState({});\n  const handleNodeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      nodes: applyNodeChanges(changes, group.nodes)\n    } : group));\n  }, []);\n  const fetchGroupInfo = useCallback(async groupId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/group-info/${groupId}`);\n      console.log(\"Response\", response);\n      if (!response.ok) throw new Error('Failed to fetch group info');\n      const data = await response.json();\n      setGroupInfo(prevInfo => ({\n        ...prevInfo,\n        [groupId]: data.displayValue\n      }));\n      return data.displayValue;\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n      return groupId; // Fallback to using the group ID if fetch fails\n    }\n  }, []);\n  const updateTabName = useCallback(async groupId => {\n    const displayName = await fetchGroupInfo(groupId);\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      displayName\n    } : group));\n    return displayName;\n  }, [fetchGroupInfo]);\n  const handleSearch = useCallback(async searchTerm => {\n    if (!searchTerm) {\n      setDisplayGroups(allGroups.map(group => ({\n        group,\n        displayValue: group\n      })));\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/search?term=${encodeURIComponent(searchTerm)}`);\n      if (!response.ok) throw new Error('Search failed');\n      const data = await response.json();\n      setDisplayGroups(data);\n    } catch (error) {\n      console.error('Error performing search:', error);\n      setError('Failed to perform search. Please try again later.');\n    }\n  }, [allGroups]);\n  const handleEdgeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      edges: applyEdgeChanges(changes, group.edges)\n    } : group));\n  }, []);\n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n  useEffect(() => {\n    if (allGroups.length > 0) {\n      setDisplayGroups(allGroups.map(group => ({\n        group,\n        displayValue: group\n      })));\n    }\n  }, [allGroups]);\n  // Modify the fetchAllGroups function:\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(data);\n      setDisplayGroups(data); // The data is already in the correct format\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n      setError('Failed to fetch groups. Please try again later.');\n    }\n  };\n  const renderGraph = useCallback(async (groupId, startDate, endDate) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}/data?${new URLSearchParams({\n        startDate,\n        endDate\n      })}`);\n      const groupData = await response.json();\n      if (groupData.graphData && Array.isArray(groupData.graphData.nodes) && Array.isArray(groupData.graphData.edges)) {\n        const newNodes = groupData.graphData.nodes.map(node => ({\n          ...node,\n          position: getInitialNodePosition(node.type)\n        }));\n        const newEdges = groupData.graphData.edges.map(edge => ({\n          ...edge,\n          type: 'smoothstep',\n          animated: true,\n          style: {\n            stroke: '#888'\n          }\n        }));\n        return {\n          groupData,\n          newNodes,\n          newEdges\n        };\n      } else {\n        throw new Error('Unexpected data structure received from server');\n      }\n    } catch (error) {\n      console.error('Failed to render graph:', error);\n      throw error;\n    }\n  }, []);\n  const handleGroupSelect = useCallback(async groupId => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const existingGroupIndex = openGroups.findIndex(group => group.id === groupId);\n      if (existingGroupIndex !== -1) {\n        // If the group is already open, just set it as active\n        setActiveGroupId(groupId);\n        setIsLoading(false);\n        return;\n      }\n      const [{\n        groupData,\n        newNodes,\n        newEdges\n      }, groupDisplayName] = await Promise.all([renderGraph(groupId, '', ''), fetchGroupInfo(groupId)]);\n      console.log(\"test:\", fetchGroupInfo(groupId));\n      setOpenGroups(prev => {\n        const newGroup = {\n          id: groupId,\n          displayName: groupDisplayName,\n          data: groupData,\n          nodes: newNodes,\n          edges: newEdges,\n          timeframe: {\n            startDate: '',\n            endDate: ''\n          }\n        };\n        return [...prev, newGroup];\n      });\n      setActiveGroupId(groupId);\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n      setError('Failed to fetch group data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [openGroups, fetchGroupInfo, renderGraph]);\n  const applyTimeframeFilter = useCallback(async (startDate, endDate) => {\n    if (activeGroupId) {\n      setIsLoading(true);\n      try {\n        const {\n          groupData,\n          newNodes,\n          newEdges\n        } = await renderGraph(activeGroupId, startDate, endDate);\n        setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n          ...group,\n          data: groupData,\n          nodes: newNodes,\n          edges: newEdges,\n          timeframe: {\n            startDate,\n            endDate\n          }\n        } : group));\n      } catch (error) {\n        console.error('Failed to apply timeframe filter:', error);\n        setError('Failed to apply timeframe filter. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [activeGroupId, renderGraph]);\n  const handleResetTimeframe = useCallback(async () => {\n    if (activeGroupId) {\n      setIsLoading(true);\n      try {\n        const {\n          groupData,\n          newNodes,\n          newEdges\n        } = await renderGraph(activeGroupId, '', '');\n        setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n          ...group,\n          data: groupData,\n          nodes: newNodes,\n          edges: newEdges,\n          timeframe: {\n            startDate: '',\n            endDate: ''\n          }\n        } : group));\n      } catch (error) {\n        console.error('Failed to reset timeframe:', error);\n        setError('Failed to reset timeframe. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [activeGroupId, renderGraph]);\n  const handleTabChange = useCallback(tabId => {\n    setActiveGroupId(tabId);\n  }, []);\n  const handleAddNewTab = useCallback(async () => {\n    const newTabId = `New Tab ${nextTabId}`;\n    setOpenGroups(prev => [...prev, {\n      id: newTabId,\n      displayName: newTabId,\n      data: null,\n      nodes: [],\n      edges: []\n    }]);\n    setActiveGroupId(newTabId);\n    setNextTabId(prev => prev + 1);\n  }, [nextTabId]);\n  const handleCloseGroup = useCallback(groupId => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      var _openGroups$;\n      setActiveGroupId(((_openGroups$ = openGroups[0]) === null || _openGroups$ === void 0 ? void 0 : _openGroups$.id) || null);\n    }\n  }, [activeGroupId, openGroups]);\n  const getInitialNodePosition = type => {\n    const centerX = 250;\n    const centerY = 250;\n    const radius = 200;\n    const angle = Math.random() * 2 * Math.PI;\n    switch (type) {\n      case 'Customer':\n        return {\n          x: centerX + radius * Math.cos(angle),\n          y: centerY + radius * Math.sin(angle)\n        };\n      case 'Counter-Party':\n        return {\n          x: centerX + radius * 0.9 * Math.cos(angle + Math.PI),\n          y: centerY + radius * 0.6 * Math.sin(angle + Math.PI)\n        };\n      case 'Business':\n        return {\n          x: centerX + radius * 0.6 * Math.cos(angle + Math.PI / 2),\n          y: centerY + radius * 0.9 * Math.sin(angle + Math.PI / 2)\n        };\n      case 'Transfer':\n      case 'BillPay':\n        return {\n          x: centerX + radius * 0.4 * Math.cos(angle),\n          y: centerY + radius * 0.3 * Math.sin(angle)\n        };\n      default:\n        return {\n          x: centerX + radius * Math.random(),\n          y: centerY + radius * Math.random()\n        };\n    }\n  };\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-icon-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/GTIcon.png\",\n          alt: \"Entity Resolution\",\n          className: \"app-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabNavigation, {\n        openGroups: openGroups,\n        activeGroupId: activeGroupId,\n        onTabChange: handleTabChange,\n        onCloseTab: handleCloseGroup,\n        onAddNewTab: handleAddNewTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-icons\",\n        children: [/*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        displayGroups: displayGroups,\n        onGroupSelect: handleGroupSelect,\n        selectedGroup: activeGroupId,\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 7\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this) : activeGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-group-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeframe-selector-container\",\n          children: /*#__PURE__*/_jsxDEV(TimeframeSelector, {\n            startDate: activeGroup.timeframe.startDate,\n            endDate: activeGroup.timeframe.endDate,\n            onStartDateChange: date => {\n              setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n                ...group,\n                timeframe: {\n                  ...group.timeframe,\n                  startDate: date\n                }\n              } : group));\n            },\n            onEndDateChange: date => {\n              setOpenGroups(prev => prev.map(group => group.id === activeGroupId ? {\n                ...group,\n                timeframe: {\n                  ...group.timeframe,\n                  endDate: date\n                }\n              } : group));\n            },\n            onApplyFilter: () => applyTimeframeFilter(activeGroup.timeframe.startDate, activeGroup.timeframe.endDate),\n            onResetTimeframe: handleResetTimeframe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: /*#__PURE__*/_jsxDEV(VisualizationPanel, {\n            nodes: activeGroup.nodes,\n            edges: activeGroup.edges,\n            onNodesChange: changes => handleNodeChanges(changes, activeGroupId),\n            onEdgesChange: changes => handleEdgeChanges(changes, activeGroupId),\n            onNodeDoubleClick: handleNodeDoubleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entity-details-container\",\n          children: /*#__PURE__*/_jsxDEV(EntityDetails, {\n            groupData: activeGroup.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-group-selected\",\n        children: \"Select a group to view details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(NodeInfoPopup, {\n      node: selectedNode,\n      onClose: () => setSelectedNode(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9/utxaU/kSLWTHSClUlw3DFBFPk=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserIcon\");\n$RefreshReg$(_c2, \"MenuIcon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","useNodesState","useEdgesState","applyNodeChanges","applyEdgeChanges","SearchPanel","VisualizationPanel","EntityDetails","NodeInfoPopup","ToolBar","TabNavigation","TimeframeSelector","MarkerType","jsxDEV","_jsxDEV","API_BASE_URL","UserIcon","className","viewBox","width","height","fill","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuIcon","_c2","App","_s","allGroups","setAllGroups","openGroups","setOpenGroups","activeGroupId","setActiveGroupId","isLoading","setIsLoading","error","setError","selectedNode","setSelectedNode","displayGroups","setDisplayGroups","timeframe","setTimeframe","startDate","endDate","appliedTimeframe","setAppliedTimeframe","nextTabId","setNextTabId","groupInfo","setGroupInfo","handleNodeChanges","changes","groupId","prev","map","group","id","nodes","fetchGroupInfo","response","fetch","console","log","ok","Error","data","json","prevInfo","displayValue","updateTabName","displayName","handleSearch","searchTerm","encodeURIComponent","handleEdgeChanges","edges","fetchAllGroups","length","renderGraph","URLSearchParams","groupData","graphData","Array","isArray","newNodes","node","position","getInitialNodePosition","type","newEdges","edge","animated","style","stroke","handleGroupSelect","existingGroupIndex","findIndex","groupDisplayName","Promise","all","newGroup","applyTimeframeFilter","handleResetTimeframe","handleTabChange","tabId","handleAddNewTab","newTabId","handleCloseGroup","filter","_openGroups$","centerX","centerY","radius","angle","Math","random","PI","x","cos","y","sin","handleNodeDoubleClick","event","activeGroup","find","src","alt","onTabChange","onCloseTab","onAddNewTab","onGroupSelect","selectedGroup","onSearch","onStartDateChange","date","onEndDateChange","onApplyFilter","onResetTimeframe","onNodesChange","onEdgesChange","onNodeDoubleClick","onClose","_c3","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { \n  useNodesState, \n  useEdgesState, \n  applyNodeChanges, \n  applyEdgeChanges \n} from 'react-flow-renderer';\nimport SearchPanel from './SearchPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { MarkerType } from 'react-flow-renderer';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\nconst UserIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </svg>\n);\n\nfunction App() {\n  const [allGroups, setAllGroups] = useState([]);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [displayGroups, setDisplayGroups] = useState([]);\n  const [timeframe, setTimeframe] = useState({ startDate: '', endDate: '' });\n  const [appliedTimeframe, setAppliedTimeframe] = useState({ startDate: '', endDate: '' });\n  const [nextTabId, setNextTabId] = useState(1);\n  const [groupInfo, setGroupInfo] = useState({});\n\n\n  const handleNodeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId \n        ? { ...group, nodes: applyNodeChanges(changes, group.nodes) }\n        : group\n    ));\n  }, []);\n\n  const fetchGroupInfo = useCallback(async (groupId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/group-info/${groupId}`);\n      console.log(\"Response\",response)\n      if (!response.ok) throw new Error('Failed to fetch group info');\n      const data = await response.json();\n      setGroupInfo(prevInfo => ({\n        ...prevInfo,\n        [groupId]: data.displayValue\n      }));\n      return data.displayValue;\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n      return groupId; // Fallback to using the group ID if fetch fails\n    }\n  }, []);\n\n  const updateTabName = useCallback(async (groupId) => {\n    const displayName = await fetchGroupInfo(groupId);\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId ? { ...group, displayName } : group\n    ));\n    return displayName;\n  }, [fetchGroupInfo]);\n\n  const handleSearch = useCallback(async (searchTerm) => {\n    if (!searchTerm) {\n      setDisplayGroups(allGroups.map(group => ({ group, displayValue: group })));\n      return;\n    }\n  \n    try {\n      const response = await fetch(`${API_BASE_URL}/search?term=${encodeURIComponent(searchTerm)}`);\n      if (!response.ok) throw new Error('Search failed');\n      const data = await response.json();\n      setDisplayGroups(data);\n    } catch (error) {\n      console.error('Error performing search:', error);\n      setError('Failed to perform search. Please try again later.');\n    }\n  }, [allGroups]);\n\n\n  const handleEdgeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId \n        ? { ...group, edges: applyEdgeChanges(changes, group.edges) }\n        : group\n    ));\n  }, []);\n  \n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n  useEffect(() => {\n    if (allGroups.length > 0) {\n      setDisplayGroups(allGroups.map(group => ({ group, displayValue: group })));\n    }\n  }, [allGroups]);\n  // Modify the fetchAllGroups function:\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(data);\n      setDisplayGroups(data); // The data is already in the correct format\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n      setError('Failed to fetch groups. Please try again later.');\n    }\n  };\n\n  const renderGraph = useCallback(async (groupId, startDate, endDate) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}/data?${new URLSearchParams({\n        startDate,\n        endDate\n      })}`);\n      const groupData = await response.json();\n\n      if (groupData.graphData && Array.isArray(groupData.graphData.nodes) && Array.isArray(groupData.graphData.edges)) {\n        const newNodes = groupData.graphData.nodes.map(node => ({\n          ...node,\n          position: getInitialNodePosition(node.type),\n        }));\n\n        const newEdges = groupData.graphData.edges.map(edge => ({\n          ...edge,\n          type: 'smoothstep',\n          animated: true,\n          style: { stroke: '#888' },\n        }));\n\n        return { groupData, newNodes, newEdges };\n      } else {\n        throw new Error('Unexpected data structure received from server');\n      }\n    } catch (error) {\n      console.error('Failed to render graph:', error);\n      throw error;\n    }\n  }, []);\n\n  const handleGroupSelect = useCallback(async (groupId) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const existingGroupIndex = openGroups.findIndex(group => group.id === groupId);\n      if (existingGroupIndex !== -1) {\n        // If the group is already open, just set it as active\n        setActiveGroupId(groupId);\n        setIsLoading(false);\n        return;\n      }\n\n      const [{ groupData, newNodes, newEdges }, groupDisplayName] = await Promise.all([\n        renderGraph(groupId, '', ''),\n        \n        fetchGroupInfo(groupId)\n      ]);\n      console.log(\"test:\",fetchGroupInfo(groupId))\n      setOpenGroups(prev => {\n        const newGroup = { \n          id: groupId, \n          displayName: groupDisplayName, \n          data: groupData, \n          nodes: newNodes, \n          edges: newEdges,\n          timeframe: { startDate: '', endDate: '' }\n        };\n\n        return [...prev, newGroup];\n      });\n      setActiveGroupId(groupId);\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n      setError('Failed to fetch group data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [openGroups, fetchGroupInfo, renderGraph]);\n\n  const applyTimeframeFilter = useCallback(async (startDate, endDate) => {\n    if (activeGroupId) {\n      setIsLoading(true);\n      try {\n        const { groupData, newNodes, newEdges } = await renderGraph(activeGroupId, startDate, endDate);\n        \n        setOpenGroups(prev => prev.map(group => \n          group.id === activeGroupId \n            ? { \n                ...group, \n                data: groupData, \n                nodes: newNodes, \n                edges: newEdges, \n                timeframe: { startDate, endDate }\n              }\n            : group\n        ));\n      } catch (error) {\n        console.error('Failed to apply timeframe filter:', error);\n        setError('Failed to apply timeframe filter. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [activeGroupId, renderGraph]);\n\n  const handleResetTimeframe = useCallback(async () => {\n    if (activeGroupId) {\n      setIsLoading(true);\n      try {\n        const { groupData, newNodes, newEdges } = await renderGraph(activeGroupId, '', '');\n        \n        setOpenGroups(prev => prev.map(group => \n          group.id === activeGroupId \n            ? { \n                ...group, \n                data: groupData, \n                nodes: newNodes, \n                edges: newEdges, \n                timeframe: { startDate: '', endDate: '' }\n              }\n            : group\n        ));\n      } catch (error) {\n        console.error('Failed to reset timeframe:', error);\n        setError('Failed to reset timeframe. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [activeGroupId, renderGraph]);\n\n  const handleTabChange = useCallback((tabId) => {\n    setActiveGroupId(tabId);\n  }, []);\n\n  const handleAddNewTab = useCallback(async () => {\n    const newTabId = `New Tab ${nextTabId}`;\n    setOpenGroups(prev => [...prev, { id: newTabId, displayName: newTabId, data: null, nodes: [], edges: [] }]);\n    \n    setActiveGroupId(newTabId);\n    setNextTabId(prev => prev + 1);\n  }, [nextTabId]);\n\n  const handleCloseGroup = useCallback((groupId) => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      setActiveGroupId(openGroups[0]?.id || null);\n    }\n  }, [activeGroupId, openGroups]);\n\n  const getInitialNodePosition = (type) => {\n    const centerX = 250;\n    const centerY = 250;\n    const radius = 200;\n    const angle = Math.random() * 2 * Math.PI;\n    \n    switch(type) {\n      case 'Customer':\n        return { x: centerX + radius * Math.cos(angle), y: centerY + radius * Math.sin(angle) };\n      case 'Counter-Party':\n        return { x: centerX + radius * 0.9 * Math.cos(angle + Math.PI), y: centerY + radius * 0.6 * Math.sin(angle + Math.PI) };\n      case 'Business':\n        return { x: centerX + radius * 0.6 * Math.cos(angle + Math.PI/2), y: centerY + radius * 0.9 * Math.sin(angle + Math.PI/2) };\n      case 'Transfer':\n      case 'BillPay':\n        return { x: centerX + radius * 0.4 * Math.cos(angle), y: centerY + radius * 0.3 * Math.sin(angle) };\n      default:\n        return { x: centerX + radius * Math.random(), y: centerY + radius * Math.random() };\n    }\n  };\n\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n\n  \n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n  \n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"app-icon-container\">\n          <img src=\"icons/GTIcon.png\" alt=\"Entity Resolution\" className=\"app-icon\" />\n        </div>\n        <TabNavigation \n        openGroups={openGroups}\n        activeGroupId={activeGroupId}\n        onTabChange={handleTabChange}\n        onCloseTab={handleCloseGroup}\n        onAddNewTab={handleAddNewTab}\n      />\n        <div className=\"header-icons\">\n          <UserIcon />\n          <MenuIcon />\n        </div>\n      </header>\n      <div className=\"app-content\">\n      <SearchPanel \n        displayGroups={displayGroups}\n        onGroupSelect={handleGroupSelect} \n        selectedGroup={activeGroupId}\n        onSearch={handleSearch}\n      />\n        {isLoading ? (\n          <div className=\"loading-indicator\">Loading...</div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : activeGroup ? (\n          <div className=\"active-group-content\">\n            <div className=\"timeframe-selector-container\">\n            <TimeframeSelector\n                startDate={activeGroup.timeframe.startDate}\n                endDate={activeGroup.timeframe.endDate}\n                onStartDateChange={(date) => {\n                  setOpenGroups(prev => prev.map(group => \n                    group.id === activeGroupId \n                      ? { ...group, timeframe: { ...group.timeframe, startDate: date } }\n                      : group\n                  ));\n                }}\n                onEndDateChange={(date) => {\n                  setOpenGroups(prev => prev.map(group => \n                    group.id === activeGroupId \n                      ? { ...group, timeframe: { ...group.timeframe, endDate: date } }\n                      : group\n                  ));\n                }}\n                onApplyFilter={() => applyTimeframeFilter(activeGroup.timeframe.startDate, activeGroup.timeframe.endDate)}\n                onResetTimeframe={handleResetTimeframe}\n              />\n            </div>\n            <div className=\"visualization-container\">\n              <VisualizationPanel \n                nodes={activeGroup.nodes}\n                edges={activeGroup.edges}\n                onNodesChange={(changes) => handleNodeChanges(changes, activeGroupId)}\n                onEdgesChange={(changes) => handleEdgeChanges(changes, activeGroupId)}\n                onNodeDoubleClick={handleNodeDoubleClick}\n              />\n            </div>\n            <ToolBar />\n            <div className=\"entity-details-container\">\n              <EntityDetails \n                groupData={activeGroup.data} \n                />\n            </div>\n          </div>\n        ) : (\n          <div className=\"no-group-selected\">Select a group to view details</div>\n        )}\n      </div>\n      {selectedNode && (\n        <NodeInfoPopup node={selectedNode} onClose={() => setSelectedNode(null)} />\n      )}\n    </div>\n  );\n  \n  \n  \n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}