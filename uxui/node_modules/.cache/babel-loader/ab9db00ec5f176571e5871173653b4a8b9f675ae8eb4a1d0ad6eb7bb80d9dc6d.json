{"ast":null,"code":"var _jsxFileName = \"/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, applyNodeChanges, applyEdgeChanges } from 'react-flow-renderer';\nimport SearchPanel from './SearchPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { MarkerType } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\nconst UserIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n_c = UserIcon;\nconst MenuIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"header-icon\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n_c2 = MenuIcon;\nfunction App() {\n  _s();\n  const [allGroups, setAllGroups] = useState([]);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [timeframe, setTimeframe] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [appliedTimeframe, setAppliedTimeframe] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const handleNodeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      nodes: applyNodeChanges(changes, group.nodes)\n    } : group));\n  }, []);\n  const handleEdgeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => group.id === groupId ? {\n      ...group,\n      edges: applyEdgeChanges(changes, group.edges)\n    } : group));\n  }, []);\n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n      setError('Failed to fetch groups. Please try again later.');\n    }\n  };\n  const handleGroupSelect = useCallback(async groupId => {\n    if (openGroups.some(group => group.id === groupId)) {\n      setActiveGroupId(groupId);\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      const queryParams = new URLSearchParams({\n        startDate: timeframe.startDate,\n        endDate: timeframe.endDate\n      }).toString();\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}/data?${queryParams}`);\n      const data = await response.json();\n      if (data.graphData && Array.isArray(data.graphData.nodes) && Array.isArray(data.graphData.edges)) {\n        const newNodes = data.graphData.nodes.map(node => ({\n          ...node,\n          position: getInitialNodePosition(node.type)\n        }));\n        const newEdges = data.graphData.edges.map(edge => ({\n          ...edge,\n          type: 'smoothstep',\n          animated: true,\n          style: {\n            stroke: '#888'\n          }\n        }));\n        setOpenGroups(prev => [...prev, {\n          id: groupId,\n          data,\n          nodes: newNodes,\n          edges: newEdges\n        }]);\n        setActiveGroupId(groupId);\n      } else {\n        console.error('Unexpected data structure:', data);\n        setError('Received unexpected data structure from the server.');\n      }\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n      setError('Failed to fetch group data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [openGroups, timeframe]);\n  const handleCloseGroup = useCallback(groupId => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      var _openGroups$;\n      setActiveGroupId(((_openGroups$ = openGroups[0]) === null || _openGroups$ === void 0 ? void 0 : _openGroups$.id) || null);\n    }\n  }, [activeGroupId, openGroups]);\n  const getInitialNodePosition = type => {\n    const centerX = 250;\n    const centerY = 250;\n    const radius = 200;\n    const angle = Math.random() * 2 * Math.PI;\n    switch (type) {\n      case 'Customer':\n        return {\n          x: centerX + radius * Math.cos(angle),\n          y: centerY + radius * Math.sin(angle)\n        };\n      case 'Counter-Party':\n        return {\n          x: centerX + radius * 0.9 * Math.cos(angle + Math.PI),\n          y: centerY + radius * 0.6 * Math.sin(angle + Math.PI)\n        };\n      case 'Business':\n        return {\n          x: centerX + radius * 0.6 * Math.cos(angle + Math.PI / 2),\n          y: centerY + radius * 0.9 * Math.sin(angle + Math.PI / 2)\n        };\n      case 'Transfer':\n      case 'BillPay':\n        return {\n          x: centerX + radius * 0.4 * Math.cos(angle),\n          y: centerY + radius * 0.3 * Math.sin(angle)\n        };\n      default:\n        return {\n          x: centerX + radius * Math.random(),\n          y: centerY + radius * Math.random()\n        };\n    }\n  };\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n  const filterNodesByTimeframe = (nodes, startDate, endDate) => {\n    if (!startDate && !endDate) return nodes;\n    const parseDate = dateString => {\n      if (!dateString) return null;\n      const [datePart, timePart] = dateString.split('-');\n      if (!datePart || !timePart) return null;\n      const [month, day, year] = datePart.split('/');\n      const [hours, minutes] = timePart.split(':');\n      return new Date(2000 + parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hours), parseInt(minutes));\n    };\n    const start = startDate ? new Date(startDate) : null;\n    const end = endDate ? new Date(endDate) : null;\n    return nodes.filter(node => {\n      var _node$data2;\n      let transactionDate;\n      if (node.type === 'Transfer' || node.type === 'BillPay') {\n        var _node$data, _node$data$transactio;\n        transactionDate = (_node$data = node.data) === null || _node$data === void 0 ? void 0 : (_node$data$transactio = _node$data.transaction) === null || _node$data$transactio === void 0 ? void 0 : _node$data$transactio.split('_')[1];\n      } else if ((_node$data2 = node.data) !== null && _node$data2 !== void 0 && _node$data2.timestamp) {\n        transactionDate = node.data.timestamp;\n      } else {\n        return true; // Keep nodes without a recognizable date\n      }\n      if (!transactionDate) return true;\n      try {\n        const nodeDate = parseDate(transactionDate);\n        if (!nodeDate) return true; // Keep nodes with unparseable dates\n\n        if (start && end) {\n          return nodeDate >= start && nodeDate <= end;\n        } else if (start) {\n          return nodeDate >= start;\n        } else if (end) {\n          return nodeDate <= end;\n        }\n      } catch (error) {\n        console.error('Error parsing date:', transactionDate);\n        return true; // Include nodes with unparseable dates\n      }\n      return true;\n    });\n  };\n  const filterEdgesByTimeframe = (edges, nodes) => {\n    const nodeIds = new Set(nodes.map(n => n.id));\n    return edges.filter(edge => nodeIds.has(edge.source) && nodeIds.has(edge.target));\n  };\n  const applyTimeframeFilter = async () => {\n    if (!timeframe.startDate && !timeframe.endDate) {\n      alert(\"Please enter at least one date to apply the filter.\");\n      return;\n    }\n    setAppliedTimeframe(timeframe);\n    if (activeGroupId) {\n      await handleGroupSelect(activeGroupId);\n    }\n  };\n  const filteredActiveGroup = activeGroup ? {\n    ...activeGroup,\n    nodes: filterNodesByTimeframe(activeGroup.nodes, appliedTimeframe.startDate, appliedTimeframe.endDate),\n    edges: filterEdgesByTimeframe(activeGroup.edges, activeGroup.nodes),\n    data: {\n      ...activeGroup.data,\n      graphData: {\n        nodes: filterNodesByTimeframe(activeGroup.nodes, appliedTimeframe.startDate, appliedTimeframe.endDate),\n        edges: filterEdgesByTimeframe(activeGroup.edges, activeGroup.nodes)\n      }\n    }\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-icon-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/GTIcon.png\",\n          alt: \"Entity Resolution\",\n          className: \"app-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-icons\",\n        children: [/*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabNavigation, {\n      openGroups: openGroups,\n      activeGroupId: activeGroupId,\n      onTabChange: setActiveGroupId,\n      onCloseTab: handleCloseGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        allGroups: allGroups,\n        onGroupSelect: handleGroupSelect,\n        selectedGroup: activeGroupId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this) : activeGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-group-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: [/*#__PURE__*/_jsxDEV(VisualizationPanel, {\n            nodes: filteredActiveGroup.nodes,\n            edges: filteredActiveGroup.edges,\n            onNodesChange: changes => handleNodeChanges(changes, activeGroupId),\n            onEdgesChange: changes => handleEdgeChanges(changes, activeGroupId),\n            onNodeDoubleClick: handleNodeDoubleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EntityDetails, {\n            groupData: filteredActiveGroup.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeframe-selector\",\n          children: /*#__PURE__*/_jsxDEV(TimeframeSelector, {\n            startDate: timeframe.startDate,\n            endDate: timeframe.endDate,\n            onStartDateChange: date => setTimeframe(prev => ({\n              ...prev,\n              startDate: date\n            })),\n            onEndDateChange: date => setTimeframe(prev => ({\n              ...prev,\n              endDate: date\n            })),\n            onApplyFilter: applyTimeframeFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-group-selected\",\n        children: \"Select a group to view details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(NodeInfoPopup, {\n      node: selectedNode,\n      onClose: () => setSelectedNode(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iSkzuVhOnY47dVu4r4oi/l99irI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserIcon\");\n$RefreshReg$(_c2, \"MenuIcon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","useNodesState","useEdgesState","applyNodeChanges","applyEdgeChanges","SearchPanel","VisualizationPanel","EntityDetails","NodeInfoPopup","ToolBar","TabNavigation","TimeframeSelector","MarkerType","jsxDEV","_jsxDEV","API_BASE_URL","UserIcon","className","viewBox","width","height","fill","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuIcon","_c2","App","_s","allGroups","setAllGroups","openGroups","setOpenGroups","activeGroupId","setActiveGroupId","isLoading","setIsLoading","error","setError","selectedNode","setSelectedNode","timeframe","setTimeframe","startDate","endDate","appliedTimeframe","setAppliedTimeframe","handleNodeChanges","changes","groupId","prev","map","group","id","nodes","handleEdgeChanges","edges","fetchAllGroups","response","fetch","data","json","Array","isArray","console","handleGroupSelect","some","queryParams","URLSearchParams","toString","graphData","newNodes","node","position","getInitialNodePosition","type","newEdges","edge","animated","style","stroke","handleCloseGroup","filter","_openGroups$","centerX","centerY","radius","angle","Math","random","PI","x","cos","y","sin","handleNodeDoubleClick","event","activeGroup","find","filterNodesByTimeframe","parseDate","dateString","datePart","timePart","split","month","day","year","hours","minutes","Date","parseInt","start","end","_node$data2","transactionDate","_node$data","_node$data$transactio","transaction","timestamp","nodeDate","filterEdgesByTimeframe","nodeIds","Set","n","has","source","target","applyTimeframeFilter","alert","filteredActiveGroup","src","alt","onTabChange","onCloseTab","onGroupSelect","selectedGroup","onNodesChange","onEdgesChange","onNodeDoubleClick","groupData","onStartDateChange","date","onEndDateChange","onApplyFilter","onClose","_c3","$RefreshReg$"],"sources":["/Users/m0b0yxy/Desktop/V1.2/uxui/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { \n  useNodesState, \n  useEdgesState, \n  applyNodeChanges, \n  applyEdgeChanges \n} from 'react-flow-renderer';\nimport SearchPanel from './SearchPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport EntityDetails from './EntityDetails';\nimport NodeInfoPopup from './NodeInfoPopup';\nimport ToolBar from './ToolBar';\nimport TabNavigation from './TabNavigation';\nimport TimeframeSelector from './TimeframeSelector';\nimport './App.css';\nimport { MarkerType } from 'react-flow-renderer';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\nconst UserIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg className=\"header-icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </svg>\n);\n\nfunction App() {\n  const [allGroups, setAllGroups] = useState([]);\n  const [openGroups, setOpenGroups] = useState([]);\n  const [activeGroupId, setActiveGroupId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  const [timeframe, setTimeframe] = useState({ startDate: '', endDate: '' });\n  const [appliedTimeframe, setAppliedTimeframe] = useState({ startDate: '', endDate: '' });\n\n\n  const handleNodeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId \n        ? { ...group, nodes: applyNodeChanges(changes, group.nodes) }\n        : group\n    ));\n  }, []);\n\n  const handleEdgeChanges = useCallback((changes, groupId) => {\n    setOpenGroups(prev => prev.map(group => \n      group.id === groupId \n        ? { ...group, edges: applyEdgeChanges(changes, group.edges) }\n        : group\n    ));\n  }, []);\n  \n  useEffect(() => {\n    fetchAllGroups();\n  }, []);\n\n  const fetchAllGroups = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`);\n      const data = await response.json();\n      setAllGroups(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Failed to fetch all groups:', error);\n      setError('Failed to fetch groups. Please try again later.');\n    }\n  };\n\n  const handleGroupSelect = useCallback(async (groupId) => {\n    if (openGroups.some(group => group.id === groupId)) {\n      setActiveGroupId(groupId);\n      return;\n    }\n  \n    setIsLoading(true);\n    setError(null);\n    try {\n      const queryParams = new URLSearchParams({\n        startDate: timeframe.startDate,\n        endDate: timeframe.endDate\n      }).toString();\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}/data?${queryParams}`);\n      const data = await response.json();\n      \n      if (data.graphData && Array.isArray(data.graphData.nodes) && Array.isArray(data.graphData.edges)) {\n        const newNodes = data.graphData.nodes.map(node => ({\n          ...node,\n          position: getInitialNodePosition(node.type),\n        }));\n  \n        const newEdges = data.graphData.edges.map(edge => ({\n          ...edge,\n          type: 'smoothstep',\n          animated: true,\n          style: { stroke: '#888' },\n        }));\n  \n        setOpenGroups(prev => [...prev, { id: groupId, data, nodes: newNodes, edges: newEdges }]);\n        setActiveGroupId(groupId);\n      } else {\n        console.error('Unexpected data structure:', data);\n        setError('Received unexpected data structure from the server.');\n      }\n    } catch (error) {\n      console.error('Failed to fetch group data:', error);\n      setError('Failed to fetch group data. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [openGroups, timeframe]);\n\n  const handleCloseGroup = useCallback((groupId) => {\n    setOpenGroups(prev => prev.filter(group => group.id !== groupId));\n    if (activeGroupId === groupId) {\n      setActiveGroupId(openGroups[0]?.id || null);\n    }\n  }, [activeGroupId, openGroups]);\n\n  const getInitialNodePosition = (type) => {\n    const centerX = 250;\n    const centerY = 250;\n    const radius = 200;\n    const angle = Math.random() * 2 * Math.PI;\n    \n    switch(type) {\n      case 'Customer':\n        return { x: centerX + radius * Math.cos(angle), y: centerY + radius * Math.sin(angle) };\n      case 'Counter-Party':\n        return { x: centerX + radius * 0.9 * Math.cos(angle + Math.PI), y: centerY + radius * 0.6 * Math.sin(angle + Math.PI) };\n      case 'Business':\n        return { x: centerX + radius * 0.6 * Math.cos(angle + Math.PI/2), y: centerY + radius * 0.9 * Math.sin(angle + Math.PI/2) };\n      case 'Transfer':\n      case 'BillPay':\n        return { x: centerX + radius * 0.4 * Math.cos(angle), y: centerY + radius * 0.3 * Math.sin(angle) };\n      default:\n        return { x: centerX + radius * Math.random(), y: centerY + radius * Math.random() };\n    }\n  };\n\n  const handleNodeDoubleClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  const activeGroup = openGroups.find(group => group.id === activeGroupId);\n\n  const filterNodesByTimeframe = (nodes, startDate, endDate) => {\n    if (!startDate && !endDate) return nodes;\n    \n    const parseDate = (dateString) => {\n      if (!dateString) return null;\n      const [datePart, timePart] = dateString.split('-');\n      if (!datePart || !timePart) return null;\n      const [month, day, year] = datePart.split('/');\n      const [hours, minutes] = timePart.split(':');\n      return new Date(2000 + parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hours), parseInt(minutes));\n    };\n  \n    const start = startDate ? new Date(startDate) : null;\n    const end = endDate ? new Date(endDate) : null;\n  \n    return nodes.filter(node => {\n      let transactionDate;\n  \n      if (node.type === 'Transfer' || node.type === 'BillPay') {\n        transactionDate = node.data?.transaction?.split('_')[1];\n      } else if (node.data?.timestamp) {\n        transactionDate = node.data.timestamp;\n      } else {\n        return true; // Keep nodes without a recognizable date\n      }\n  \n      if (!transactionDate) return true;\n  \n      try {\n        const nodeDate = parseDate(transactionDate);\n        if (!nodeDate) return true; // Keep nodes with unparseable dates\n  \n        if (start && end) {\n          return nodeDate >= start && nodeDate <= end;\n        } else if (start) {\n          return nodeDate >= start;\n        } else if (end) {\n          return nodeDate <= end;\n        }\n      } catch (error) {\n        console.error('Error parsing date:', transactionDate);\n        return true; // Include nodes with unparseable dates\n      }\n      return true;\n    });\n  };\n\n  const filterEdgesByTimeframe = (edges, nodes) => {\n    const nodeIds = new Set(nodes.map(n => n.id));\n    return edges.filter(edge => nodeIds.has(edge.source) && nodeIds.has(edge.target));\n  };\n\n  const applyTimeframeFilter = async () => {\n    if (!timeframe.startDate && !timeframe.endDate) {\n      alert(\"Please enter at least one date to apply the filter.\");\n      return;\n    }\n    setAppliedTimeframe(timeframe);\n    \n    if (activeGroupId) {\n      await handleGroupSelect(activeGroupId);\n    }\n  };\n  \n  const filteredActiveGroup = activeGroup ? {\n    ...activeGroup,\n    nodes: filterNodesByTimeframe(activeGroup.nodes, appliedTimeframe.startDate, appliedTimeframe.endDate),\n    edges: filterEdgesByTimeframe(activeGroup.edges, activeGroup.nodes),\n    data: {\n      ...activeGroup.data,\n      graphData: {\n        nodes: filterNodesByTimeframe(activeGroup.nodes, appliedTimeframe.startDate, appliedTimeframe.endDate),\n        edges: filterEdgesByTimeframe(activeGroup.edges, activeGroup.nodes),\n      },\n    },\n  } : null;\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"app-icon-container\">\n          <img src=\"icons/GTIcon.png\" alt=\"Entity Resolution\" className=\"app-icon\" />\n        </div>\n        <div className=\"header-icons\">\n          <UserIcon />\n          <MenuIcon />\n        </div>\n      </header>\n      <TabNavigation \n        openGroups={openGroups}\n        activeGroupId={activeGroupId}\n        onTabChange={setActiveGroupId}\n        onCloseTab={handleCloseGroup}\n      />\n      <div className=\"app-content\">\n        <SearchPanel \n          allGroups={allGroups} \n          onGroupSelect={handleGroupSelect} \n          selectedGroup={activeGroupId}\n        />\n        {isLoading ? (\n          <div className=\"loading-indicator\">Loading...</div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : activeGroup ? (\n          <div className=\"active-group-content\">\n            <div className=\"tabs-container\">\n              {/* Tabs here */}\n            </div>\n            <div className=\"visualization-container\">\n              <VisualizationPanel \n                nodes={filteredActiveGroup.nodes}\n                edges={filteredActiveGroup.edges}\n                onNodesChange={(changes) => handleNodeChanges(changes, activeGroupId)}\n                onEdgesChange={(changes) => handleEdgeChanges(changes, activeGroupId)}\n                onNodeDoubleClick={handleNodeDoubleClick}\n              />\n              <ToolBar />\n              <EntityDetails groupData={filteredActiveGroup.data} />\n            </div>\n            <div className=\"timeframe-selector\">\n              <TimeframeSelector\n                startDate={timeframe.startDate}\n                endDate={timeframe.endDate}\n                onStartDateChange={(date) => setTimeframe(prev => ({ ...prev, startDate: date }))}\n                onEndDateChange={(date) => setTimeframe(prev => ({ ...prev, endDate: date }))}\n                onApplyFilter={applyTimeframeFilter}\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"no-group-selected\">Select a group to view details</div>\n        )}\n      </div>\n      {selectedNode && (\n        <NodeInfoPopup node={selectedNode} onClose={() => setSelectedNode(null)} />\n      )}\n    </div>\n  );\n  \n  \n  \n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAOC,SAAS,IACdC,aAAa,EACbC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,QACX,qBAAqB;AAC5B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAO,WAAW;AAClB,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,kBACfF,OAAA;EAAKG,SAAS,EAAC,aAAa;EAACC,OAAO,EAAC,WAAW;EAACC,KAAK,EAAC,IAAI;EAACC,MAAM,EAAC,IAAI;EAACC,IAAI,EAAC,cAAc;EAAAC,QAAA,eACzFR,OAAA;IAAMS,CAAC,EAAC;EAA+G;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACvH,CACN;AAACC,EAAA,GAJIZ,QAAQ;AAMd,MAAMa,QAAQ,GAAGA,CAAA,kBACff,OAAA;EAAKG,SAAS,EAAC,aAAa;EAACC,OAAO,EAAC,WAAW;EAACC,KAAK,EAAC,IAAI;EAACC,MAAM,EAAC,IAAI;EAACC,IAAI,EAAC,cAAc;EAAAC,QAAA,eACzFR,OAAA;IAAMS,CAAC,EAAC;EAA+C;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACvD,CACN;AAACG,GAAA,GAJID,QAAQ;AAMd,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC0C,SAAS,EAAEC,YAAY,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4C,KAAK,EAAEC,QAAQ,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC8C,YAAY,EAAEC,eAAe,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAM,CAACgD,SAAS,EAAEC,YAAY,CAAC,GAAGjD,QAAQ,CAAC;IAAEkD,SAAS,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAC1E,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrD,QAAQ,CAAC;IAAEkD,SAAS,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAGxF,MAAMG,iBAAiB,GAAGrD,WAAW,CAAC,CAACsD,OAAO,EAAEC,OAAO,KAAK;IAC1DjB,aAAa,CAACkB,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,KAAK,IAClCA,KAAK,CAACC,EAAE,KAAKJ,OAAO,GAChB;MAAE,GAAGG,KAAK;MAAEE,KAAK,EAAEvD,gBAAgB,CAACiD,OAAO,EAAEI,KAAK,CAACE,KAAK;IAAE,CAAC,GAC3DF,KACN,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,iBAAiB,GAAG7D,WAAW,CAAC,CAACsD,OAAO,EAAEC,OAAO,KAAK;IAC1DjB,aAAa,CAACkB,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,KAAK,IAClCA,KAAK,CAACC,EAAE,KAAKJ,OAAO,GAChB;MAAE,GAAGG,KAAK;MAAEI,KAAK,EAAExD,gBAAgB,CAACgD,OAAO,EAAEI,KAAK,CAACI,KAAK;IAAE,CAAC,GAC3DJ,KACN,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENzD,SAAS,CAAC,MAAM;IACd8D,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhD,YAAY,SAAS,CAAC;MACtD,MAAMiD,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC/B,YAAY,CAACgC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;IAC/C,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACd2B,OAAO,CAAC3B,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,iDAAiD,CAAC;IAC7D;EACF,CAAC;EAED,MAAM2B,iBAAiB,GAAGvE,WAAW,CAAC,MAAOuD,OAAO,IAAK;IACvD,IAAIlB,UAAU,CAACmC,IAAI,CAACd,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKJ,OAAO,CAAC,EAAE;MAClDf,gBAAgB,CAACe,OAAO,CAAC;MACzB;IACF;IAEAb,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAM6B,WAAW,GAAG,IAAIC,eAAe,CAAC;QACtCzB,SAAS,EAAEF,SAAS,CAACE,SAAS;QAC9BC,OAAO,EAAEH,SAAS,CAACG;MACrB,CAAC,CAAC,CAACyB,QAAQ,CAAC,CAAC;MACb,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhD,YAAY,WAAWsC,OAAO,SAASkB,WAAW,EAAE,CAAC;MACrF,MAAMP,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACU,SAAS,IAAIR,KAAK,CAACC,OAAO,CAACH,IAAI,CAACU,SAAS,CAAChB,KAAK,CAAC,IAAIQ,KAAK,CAACC,OAAO,CAACH,IAAI,CAACU,SAAS,CAACd,KAAK,CAAC,EAAE;QAChG,MAAMe,QAAQ,GAAGX,IAAI,CAACU,SAAS,CAAChB,KAAK,CAACH,GAAG,CAACqB,IAAI,KAAK;UACjD,GAAGA,IAAI;UACPC,QAAQ,EAAEC,sBAAsB,CAACF,IAAI,CAACG,IAAI;QAC5C,CAAC,CAAC,CAAC;QAEH,MAAMC,QAAQ,GAAGhB,IAAI,CAACU,SAAS,CAACd,KAAK,CAACL,GAAG,CAAC0B,IAAI,KAAK;UACjD,GAAGA,IAAI;UACPF,IAAI,EAAE,YAAY;UAClBG,QAAQ,EAAE,IAAI;UACdC,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAO;QAC1B,CAAC,CAAC,CAAC;QAEHhD,aAAa,CAACkB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAEG,EAAE,EAAEJ,OAAO;UAAEW,IAAI;UAAEN,KAAK,EAAEiB,QAAQ;UAAEf,KAAK,EAAEoB;QAAS,CAAC,CAAC,CAAC;QACzF1C,gBAAgB,CAACe,OAAO,CAAC;MAC3B,CAAC,MAAM;QACLe,OAAO,CAAC3B,KAAK,CAAC,4BAA4B,EAAEuB,IAAI,CAAC;QACjDtB,QAAQ,CAAC,qDAAqD,CAAC;MACjE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACd2B,OAAO,CAAC3B,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,qDAAqD,CAAC;IACjE,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACL,UAAU,EAAEU,SAAS,CAAC,CAAC;EAE3B,MAAMwC,gBAAgB,GAAGvF,WAAW,CAAEuD,OAAO,IAAK;IAChDjB,aAAa,CAACkB,IAAI,IAAIA,IAAI,CAACgC,MAAM,CAAC9B,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKJ,OAAO,CAAC,CAAC;IACjE,IAAIhB,aAAa,KAAKgB,OAAO,EAAE;MAAA,IAAAkC,YAAA;MAC7BjD,gBAAgB,CAAC,EAAAiD,YAAA,GAAApD,UAAU,CAAC,CAAC,CAAC,cAAAoD,YAAA,uBAAbA,YAAA,CAAe9B,EAAE,KAAI,IAAI,CAAC;IAC7C;EACF,CAAC,EAAE,CAACpB,aAAa,EAAEF,UAAU,CAAC,CAAC;EAE/B,MAAM2C,sBAAsB,GAAIC,IAAI,IAAK;IACvC,MAAMS,OAAO,GAAG,GAAG;IACnB,MAAMC,OAAO,GAAG,GAAG;IACnB,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAGD,IAAI,CAACE,EAAE;IAEzC,QAAOf,IAAI;MACT,KAAK,UAAU;QACb,OAAO;UAAEgB,CAAC,EAAEP,OAAO,GAAGE,MAAM,GAAGE,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC;UAAEM,CAAC,EAAER,OAAO,GAAGC,MAAM,GAAGE,IAAI,CAACM,GAAG,CAACP,KAAK;QAAE,CAAC;MACzF,KAAK,eAAe;QAClB,OAAO;UAAEI,CAAC,EAAEP,OAAO,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,CAACI,GAAG,CAACL,KAAK,GAAGC,IAAI,CAACE,EAAE,CAAC;UAAEG,CAAC,EAAER,OAAO,GAAGC,MAAM,GAAG,GAAG,GAAGE,IAAI,CAACM,GAAG,CAACP,KAAK,GAAGC,IAAI,CAACE,EAAE;QAAE,CAAC;MACzH,KAAK,UAAU;QACb,OAAO;UAAEC,CAAC,EAAEP,OAAO,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,CAACI,GAAG,CAACL,KAAK,GAAGC,IAAI,CAACE,EAAE,GAAC,CAAC,CAAC;UAAEG,CAAC,EAAER,OAAO,GAAGC,MAAM,GAAG,GAAG,GAAGE,IAAI,CAACM,GAAG,CAACP,KAAK,GAAGC,IAAI,CAACE,EAAE,GAAC,CAAC;QAAE,CAAC;MAC7H,KAAK,UAAU;MACf,KAAK,SAAS;QACZ,OAAO;UAAEC,CAAC,EAAEP,OAAO,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC;UAAEM,CAAC,EAAER,OAAO,GAAGC,MAAM,GAAG,GAAG,GAAGE,IAAI,CAACM,GAAG,CAACP,KAAK;QAAE,CAAC;MACrG;QACE,OAAO;UAAEI,CAAC,EAAEP,OAAO,GAAGE,MAAM,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC;UAAEI,CAAC,EAAER,OAAO,GAAGC,MAAM,GAAGE,IAAI,CAACC,MAAM,CAAC;QAAE,CAAC;IACvF;EACF,CAAC;EAED,MAAMM,qBAAqB,GAAGrG,WAAW,CAAC,CAACsG,KAAK,EAAExB,IAAI,KAAK;IACzDhC,eAAe,CAACgC,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMyB,WAAW,GAAGlE,UAAU,CAACmE,IAAI,CAAC9C,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKpB,aAAa,CAAC;EAExE,MAAMkE,sBAAsB,GAAGA,CAAC7C,KAAK,EAAEX,SAAS,EAAEC,OAAO,KAAK;IAC5D,IAAI,CAACD,SAAS,IAAI,CAACC,OAAO,EAAE,OAAOU,KAAK;IAExC,MAAM8C,SAAS,GAAIC,UAAU,IAAK;MAChC,IAAI,CAACA,UAAU,EAAE,OAAO,IAAI;MAC5B,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC;MAClD,IAAI,CAACF,QAAQ,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAI;MACvC,MAAM,CAACE,KAAK,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAGL,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;MAC9C,MAAM,CAACI,KAAK,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;MAC5C,OAAO,IAAIM,IAAI,CAAC,IAAI,GAAGC,QAAQ,CAACJ,IAAI,CAAC,EAAEI,QAAQ,CAACN,KAAK,CAAC,GAAG,CAAC,EAAEM,QAAQ,CAACL,GAAG,CAAC,EAAEK,QAAQ,CAACH,KAAK,CAAC,EAAEG,QAAQ,CAACF,OAAO,CAAC,CAAC;IAChH,CAAC;IAED,MAAMG,KAAK,GAAGrE,SAAS,GAAG,IAAImE,IAAI,CAACnE,SAAS,CAAC,GAAG,IAAI;IACpD,MAAMsE,GAAG,GAAGrE,OAAO,GAAG,IAAIkE,IAAI,CAAClE,OAAO,CAAC,GAAG,IAAI;IAE9C,OAAOU,KAAK,CAAC4B,MAAM,CAACV,IAAI,IAAI;MAAA,IAAA0C,WAAA;MAC1B,IAAIC,eAAe;MAEnB,IAAI3C,IAAI,CAACG,IAAI,KAAK,UAAU,IAAIH,IAAI,CAACG,IAAI,KAAK,SAAS,EAAE;QAAA,IAAAyC,UAAA,EAAAC,qBAAA;QACvDF,eAAe,IAAAC,UAAA,GAAG5C,IAAI,CAACZ,IAAI,cAAAwD,UAAA,wBAAAC,qBAAA,GAATD,UAAA,CAAWE,WAAW,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzD,CAAC,MAAM,KAAAU,WAAA,GAAI1C,IAAI,CAACZ,IAAI,cAAAsD,WAAA,eAATA,WAAA,CAAWK,SAAS,EAAE;QAC/BJ,eAAe,GAAG3C,IAAI,CAACZ,IAAI,CAAC2D,SAAS;MACvC,CAAC,MAAM;QACL,OAAO,IAAI,CAAC,CAAC;MACf;MAEA,IAAI,CAACJ,eAAe,EAAE,OAAO,IAAI;MAEjC,IAAI;QACF,MAAMK,QAAQ,GAAGpB,SAAS,CAACe,eAAe,CAAC;QAC3C,IAAI,CAACK,QAAQ,EAAE,OAAO,IAAI,CAAC,CAAC;;QAE5B,IAAIR,KAAK,IAAIC,GAAG,EAAE;UAChB,OAAOO,QAAQ,IAAIR,KAAK,IAAIQ,QAAQ,IAAIP,GAAG;QAC7C,CAAC,MAAM,IAAID,KAAK,EAAE;UAChB,OAAOQ,QAAQ,IAAIR,KAAK;QAC1B,CAAC,MAAM,IAAIC,GAAG,EAAE;UACd,OAAOO,QAAQ,IAAIP,GAAG;QACxB;MACF,CAAC,CAAC,OAAO5E,KAAK,EAAE;QACd2B,OAAO,CAAC3B,KAAK,CAAC,qBAAqB,EAAE8E,eAAe,CAAC;QACrD,OAAO,IAAI,CAAC,CAAC;MACf;MACA,OAAO,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,sBAAsB,GAAGA,CAACjE,KAAK,EAAEF,KAAK,KAAK;IAC/C,MAAMoE,OAAO,GAAG,IAAIC,GAAG,CAACrE,KAAK,CAACH,GAAG,CAACyE,CAAC,IAAIA,CAAC,CAACvE,EAAE,CAAC,CAAC;IAC7C,OAAOG,KAAK,CAAC0B,MAAM,CAACL,IAAI,IAAI6C,OAAO,CAACG,GAAG,CAAChD,IAAI,CAACiD,MAAM,CAAC,IAAIJ,OAAO,CAACG,GAAG,CAAChD,IAAI,CAACkD,MAAM,CAAC,CAAC;EACnF,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAACvF,SAAS,CAACE,SAAS,IAAI,CAACF,SAAS,CAACG,OAAO,EAAE;MAC9CqF,KAAK,CAAC,qDAAqD,CAAC;MAC5D;IACF;IACAnF,mBAAmB,CAACL,SAAS,CAAC;IAE9B,IAAIR,aAAa,EAAE;MACjB,MAAMgC,iBAAiB,CAAChC,aAAa,CAAC;IACxC;EACF,CAAC;EAED,MAAMiG,mBAAmB,GAAGjC,WAAW,GAAG;IACxC,GAAGA,WAAW;IACd3C,KAAK,EAAE6C,sBAAsB,CAACF,WAAW,CAAC3C,KAAK,EAAET,gBAAgB,CAACF,SAAS,EAAEE,gBAAgB,CAACD,OAAO,CAAC;IACtGY,KAAK,EAAEiE,sBAAsB,CAACxB,WAAW,CAACzC,KAAK,EAAEyC,WAAW,CAAC3C,KAAK,CAAC;IACnEM,IAAI,EAAE;MACJ,GAAGqC,WAAW,CAACrC,IAAI;MACnBU,SAAS,EAAE;QACThB,KAAK,EAAE6C,sBAAsB,CAACF,WAAW,CAAC3C,KAAK,EAAET,gBAAgB,CAACF,SAAS,EAAEE,gBAAgB,CAACD,OAAO,CAAC;QACtGY,KAAK,EAAEiE,sBAAsB,CAACxB,WAAW,CAACzC,KAAK,EAAEyC,WAAW,CAAC3C,KAAK;MACpE;IACF;EACF,CAAC,GAAG,IAAI;EACR,oBACE5C,OAAA;IAAKG,SAAS,EAAC,eAAe;IAAAK,QAAA,gBAC5BR,OAAA;MAAQG,SAAS,EAAC,YAAY;MAAAK,QAAA,gBAC5BR,OAAA;QAAKG,SAAS,EAAC,oBAAoB;QAAAK,QAAA,eACjCR,OAAA;UAAKyH,GAAG,EAAC,kBAAkB;UAACC,GAAG,EAAC,mBAAmB;UAACvH,SAAS,EAAC;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACNb,OAAA;QAAKG,SAAS,EAAC,cAAc;QAAAK,QAAA,gBAC3BR,OAAA,CAACE,QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACZb,OAAA,CAACe,QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACTb,OAAA,CAACJ,aAAa;MACZyB,UAAU,EAAEA,UAAW;MACvBE,aAAa,EAAEA,aAAc;MAC7BoG,WAAW,EAAEnG,gBAAiB;MAC9BoG,UAAU,EAAErD;IAAiB;MAAA7D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFb,OAAA;MAAKG,SAAS,EAAC,aAAa;MAAAK,QAAA,gBAC1BR,OAAA,CAACT,WAAW;QACV4B,SAAS,EAAEA,SAAU;QACrB0G,aAAa,EAAEtE,iBAAkB;QACjCuE,aAAa,EAAEvG;MAAc;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EACDY,SAAS,gBACRzB,OAAA;QAAKG,SAAS,EAAC,mBAAmB;QAAAK,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GACjDc,KAAK,gBACP3B,OAAA;QAAKG,SAAS,EAAC,eAAe;QAAAK,QAAA,EAAEmB;MAAK;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAC1C0E,WAAW,gBACbvF,OAAA;QAAKG,SAAS,EAAC,sBAAsB;QAAAK,QAAA,gBACnCR,OAAA;UAAKG,SAAS,EAAC;QAAgB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE1B,CAAC,eACNb,OAAA;UAAKG,SAAS,EAAC,yBAAyB;UAAAK,QAAA,gBACtCR,OAAA,CAACR,kBAAkB;YACjBoD,KAAK,EAAE4E,mBAAmB,CAAC5E,KAAM;YACjCE,KAAK,EAAE0E,mBAAmB,CAAC1E,KAAM;YACjCiF,aAAa,EAAGzF,OAAO,IAAKD,iBAAiB,CAACC,OAAO,EAAEf,aAAa,CAAE;YACtEyG,aAAa,EAAG1F,OAAO,IAAKO,iBAAiB,CAACP,OAAO,EAAEf,aAAa,CAAE;YACtE0G,iBAAiB,EAAE5C;UAAsB;YAAA3E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,eACFb,OAAA,CAACL,OAAO;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXb,OAAA,CAACP,aAAa;YAACyI,SAAS,EAAEV,mBAAmB,CAACtE;UAAK;YAAAxC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACNb,OAAA;UAAKG,SAAS,EAAC,oBAAoB;UAAAK,QAAA,eACjCR,OAAA,CAACH,iBAAiB;YAChBoC,SAAS,EAAEF,SAAS,CAACE,SAAU;YAC/BC,OAAO,EAAEH,SAAS,CAACG,OAAQ;YAC3BiG,iBAAiB,EAAGC,IAAI,IAAKpG,YAAY,CAACQ,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAEP,SAAS,EAAEmG;YAAK,CAAC,CAAC,CAAE;YAClFC,eAAe,EAAGD,IAAI,IAAKpG,YAAY,CAACQ,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAEN,OAAO,EAAEkG;YAAK,CAAC,CAAC,CAAE;YAC9EE,aAAa,EAAEhB;UAAqB;YAAA5G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENb,OAAA;QAAKG,SAAS,EAAC,mBAAmB;QAAAK,QAAA,EAAC;MAA8B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACvE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACLgB,YAAY,iBACX7B,OAAA,CAACN,aAAa;MAACoE,IAAI,EAAEjC,YAAa;MAAC0G,OAAO,EAAEA,CAAA,KAAMzG,eAAe,CAAC,IAAI;IAAE;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAKV;AAACK,EAAA,CArQQD,GAAG;AAAAuH,GAAA,GAAHvH,GAAG;AAuQZ,eAAeA,GAAG;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAwH,GAAA;AAAAC,YAAA,CAAA3H,EAAA;AAAA2H,YAAA,CAAAzH,GAAA;AAAAyH,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}